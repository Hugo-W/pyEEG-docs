Search.setIndex({"alltitles": {"A simple TRF example": [[121, "a-simple-trf-example"]], "About natMEEG": [[0, null]], "Array manipulation": [[122, "array-manipulation"]], "Authors": [[0, "authors"]], "Average several models": [[2, "Average-several-models"], [3, "Average-several-models"]], "CCA Tutorial": [[1, null]], "Classes": [[116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [122, "classes"]], "Comparing with MNE-ReceptiveField": [[2, "Comparing-with-MNE-ReceptiveField"], [3, "Comparing-with-MNE-ReceptiveField"]], "Compute one big model": [[2, "Compute-one-big-model"], [3, "Compute-one-big-model"]], "Contents": [[114, null]], "Contributing": [[0, "contributing"]], "From PyPI:": [[115, "from-pypi"]], "From source": [[115, "from-source"]], "Functions": [[116, "functions"], [117, "functions"], [122, "functions"], [123, "functions"]], "Generate documentation": [[115, "generate-documentation"]], "Github": [[0, "github"]], "IO module": [[116, null]], "Import EEG": [[1, "Import-EEG"], [2, "Import-EEG"], [3, "Import-EEG"]], "Import Word-level features": [[2, "Import-Word-level-features"], [3, "Import-Word-level-features"]], "Indices and tables": [[114, "indices-and-tables"]], "Install natMEEG": [[115, "install-natmeeg"]], "Installation Instructions": [[115, null]], "Jupyter Notebooks Examples": [[120, "jupyter-notebooks-examples"]], "Listing of all classes and functions": [[118, "listing-of-all-classes-and-functions"]], "Load Envelope": [[1, "Load-Envelope"]], "Loading Word vectors": [[120, "loading-word-vectors"]], "Loading Word-level features": [[120, "loading-word-level-features"]], "Loading WordVectors as word level features": [[4, null]], "Loading processed EEG (processed by EEGLAB)": [[120, "loading-processed-eeg-processed-by-eeglab"]], "Methods": [[5, "methods"], [19, "methods"], [25, "methods"], [42, "methods"], [50, "methods"], [74, "methods"], [83, "methods"]], "Modelling": [[117, null]], "Order EEG according to envelope": [[1, "Order-EEG-according-to-envelope"]], "Other": [[114, null], [122, "other"]], "Plot coefficients": [[1, "Plot-coefficients"], [1, "id1"]], "Preprocessing module": [[118, null]], "Run CCA modelling from noise toolbox": [[1, "Run-CCA-modelling-from-noise-toolbox"]], "Run CCA modelling from sklearn": [[1, "Run-CCA-modelling-from-sklearn"]], "Run TRF modelling": [[2, "Run-TRF-modelling"], [3, "Run-TRF-modelling"]], "Signal": [[122, "signal"]], "Simulation module": [[119, null]], "Simulations utilities": [[119, "simulations-utilities"]], "Single subject, single story": [[2, "Single-subject,-single-story"], [3, "Single-subject,-single-story"]], "Some Simulation Models:": [[119, "some-simulation-models"]], "Summary": [[118, "summary"]], "TRF Tutorial": [[3, null]], "TRF on Syntactic Features": [[2, null]], "To get started": [[114, null]], "Todo": [[25, "id1"], [119, "id1"]], "Tutorials": [[120, null]], "Usage": [[121, null]], "Utilities": [[122, null]], "Vizualisaton": [[123, null]], "WARNING: may be outdated": [[120, null]], "Welcome to natMEEG\u2019s documentation!": [[114, null]], "pyeeg.cca.CCA_Estimator": [[5, null]], "pyeeg.cca.CCA_Estimator.fit": [[6, null]], "pyeeg.cca.CCA_Estimator.get_metadata_routing": [[7, null]], "pyeeg.cca.CCA_Estimator.get_params": [[8, null]], "pyeeg.cca.CCA_Estimator.plot_activation_map": [[9, null]], "pyeeg.cca.CCA_Estimator.plot_all_dim_time": [[10, null]], "pyeeg.cca.CCA_Estimator.plot_compact_time": [[11, null]], "pyeeg.cca.CCA_Estimator.plot_corr": [[12, null]], "pyeeg.cca.CCA_Estimator.plot_spatial_filter": [[13, null]], "pyeeg.cca.CCA_Estimator.plot_time_filter": [[14, null]], "pyeeg.cca.CCA_Estimator.set_fit_request": [[15, null]], "pyeeg.cca.CCA_Estimator.set_params": [[16, null]], "pyeeg.cca.CCA_Estimator.set_transform_request": [[17, null]], "pyeeg.cca.CCA_Estimator.transform": [[18, null]], "pyeeg.io.AlignedSpeech": [[19, null]], "pyeeg.io.AlignedSpeech.add_feature": [[20, null]], "pyeeg.io.AlignedSpeech.add_word_level_features": [[21, null]], "pyeeg.io.AlignedSpeech.create_word_level_features": [[22, null]], "pyeeg.io.AlignedSpeech.get_envelope": [[23, null]], "pyeeg.io.AlignedSpeech.samples_from_onset": [[24, null]], "pyeeg.io.WordLevelFeatures": [[25, null]], "pyeeg.io.WordLevelFeatures.align_word_features": [[26, null]], "pyeeg.io.WordLevelFeatures.summary": [[27, null]], "pyeeg.io.eeglab2mne": [[28, null]], "pyeeg.io.extract_duration_audio": [[29, null]], "pyeeg.io.extract_duration_praat": [[30, null]], "pyeeg.io.fieldtrip2mne": [[31, null]], "pyeeg.io.get_sentence_position": [[32, null]], "pyeeg.io.get_word_onsets": [[33, null]], "pyeeg.io.get_word_vectors": [[34, null]], "pyeeg.io.load_close_values": [[35, null]], "pyeeg.io.load_depth_values": [[36, null]], "pyeeg.io.load_ica_matrices": [[37, null]], "pyeeg.io.load_mat": [[38, null]], "pyeeg.io.load_open_values": [[39, null]], "pyeeg.io.load_surprisal_values": [[40, null]], "pyeeg.io.load_wordfreq_values": [[41, null]], "pyeeg.mcca.mCCA": [[42, null]], "pyeeg.mcca.mCCA.canonical_correlate_single": [[43, null]], "pyeeg.mcca.mCCA.denoise": [[44, null]], "pyeeg.mcca.mCCA.fit": [[45, null]], "pyeeg.mcca.mCCA.get_metadata_routing": [[46, null]], "pyeeg.mcca.mCCA.get_params": [[47, null]], "pyeeg.mcca.mCCA.plot_summary_components_variance": [[48, null]], "pyeeg.mcca.mCCA.set_params": [[49, null]], "pyeeg.models.TRFEstimator": [[50, null]], "pyeeg.models.TRFEstimator.apply_func": [[51, null]], "pyeeg.models.TRFEstimator.copy": [[52, null]], "pyeeg.models.TRFEstimator.fill_lags": [[53, null]], "pyeeg.models.TRFEstimator.fit": [[54, null]], "pyeeg.models.TRFEstimator.fromArray": [[55, null]], "pyeeg.models.TRFEstimator.get_metadata_routing": [[56, null]], "pyeeg.models.TRFEstimator.get_params": [[57, null]], "pyeeg.models.TRFEstimator.load": [[58, null]], "pyeeg.models.TRFEstimator.multialpha_score": [[59, null]], "pyeeg.models.TRFEstimator.plot": [[60, null]], "pyeeg.models.TRFEstimator.plot_multialpha_scores": [[61, null]], "pyeeg.models.TRFEstimator.plot_topomap": [[62, null]], "pyeeg.models.TRFEstimator.predict": [[63, null]], "pyeeg.models.TRFEstimator.save": [[64, null]], "pyeeg.models.TRFEstimator.score": [[65, null]], "pyeeg.models.TRFEstimator.select_best_coefs": [[66, null]], "pyeeg.models.TRFEstimator.set_fit_request": [[67, null]], "pyeeg.models.TRFEstimator.set_params": [[68, null]], "pyeeg.models.TRFEstimator.set_score_request": [[69, null]], "pyeeg.models.TRFEstimator.xfit": [[70, null]], "pyeeg.models._svd_regress": [[71, null]], "pyeeg.models.fit_ar": [[72, null]], "pyeeg.models.fit_var": [[73, null]], "pyeeg.preprocess.MultichanWienerFilter": [[74, null]], "pyeeg.preprocess.MultichanWienerFilter.fit": [[75, null]], "pyeeg.preprocess.MultichanWienerFilter.fit_transform": [[76, null]], "pyeeg.preprocess.MultichanWienerFilter.get_metadata_routing": [[77, null]], "pyeeg.preprocess.MultichanWienerFilter.get_params": [[78, null]], "pyeeg.preprocess.MultichanWienerFilter.set_fit_request": [[79, null]], "pyeeg.preprocess.MultichanWienerFilter.set_output": [[80, null]], "pyeeg.preprocess.MultichanWienerFilter.set_params": [[81, null]], "pyeeg.preprocess.MultichanWienerFilter.transorm": [[82, null]], "pyeeg.preprocess.WaveletTransform": [[83, null]], "pyeeg.preprocess.apply_filterbank": [[84, null]], "pyeeg.preprocess.covariance": [[85, null]], "pyeeg.preprocess.covariances": [[86, null]], "pyeeg.preprocess.covariances_extended": [[87, null]], "pyeeg.preprocess.create_filterbank": [[88, null]], "pyeeg.preprocess.get_power": [[89, null]], "pyeeg.utils._is_1d": [[90, null]], "pyeeg.utils.chunk_data": [[91, null]], "pyeeg.utils.find_knee_point": [[92, null]], "pyeeg.utils.fir_order": [[93, null]], "pyeeg.utils.is_pos_def": [[94, null]], "pyeeg.utils.lag_matrix": [[95, null]], "pyeeg.utils.lag_span": [[96, null]], "pyeeg.utils.lag_sparse": [[97, null]], "pyeeg.utils.mem_check": [[98, null]], "pyeeg.utils.moving_average": [[99, null]], "pyeeg.utils.rolling_func": [[100, null]], "pyeeg.utils.shift_array": [[101, null]], "pyeeg.utils.signal_envelope": [[102, null]], "pyeeg.vizu.colormap_masked": [[103, null]], "pyeeg.vizu.get_spatial_colors": [[104, null]], "pyeeg.vizu.pairwise_boxplots": [[105, null]], "pyeeg.vizu.plot_filterbank": [[106, null]], "pyeeg.vizu.plot_filterbank_output": [[107, null]], "pyeeg.vizu.plot_interactive": [[108, null]], "pyeeg.vizu.plot_trf_signi": [[109, null]], "pyeeg.vizu.plots_topogrid": [[110, null]], "pyeeg.vizu.significance_overlay": [[111, null]], "pyeeg.vizu.topomap": [[112, null]], "pyeeg.vizu.topoplot_array": [[113, null]]}, "docnames": ["about", "examples/CCA_envelope", "examples/TRF_syntactic_feats", "examples/TRF_wordonsets", "examples/import_WordVectors", "generated/pyeeg.cca.CCA_Estimator", "generated/pyeeg.cca.CCA_Estimator.fit", "generated/pyeeg.cca.CCA_Estimator.get_metadata_routing", "generated/pyeeg.cca.CCA_Estimator.get_params", "generated/pyeeg.cca.CCA_Estimator.plot_activation_map", "generated/pyeeg.cca.CCA_Estimator.plot_all_dim_time", "generated/pyeeg.cca.CCA_Estimator.plot_compact_time", "generated/pyeeg.cca.CCA_Estimator.plot_corr", "generated/pyeeg.cca.CCA_Estimator.plot_spatial_filter", "generated/pyeeg.cca.CCA_Estimator.plot_time_filter", "generated/pyeeg.cca.CCA_Estimator.set_fit_request", "generated/pyeeg.cca.CCA_Estimator.set_params", "generated/pyeeg.cca.CCA_Estimator.set_transform_request", "generated/pyeeg.cca.CCA_Estimator.transform", "generated/pyeeg.io.AlignedSpeech", "generated/pyeeg.io.AlignedSpeech.add_feature", "generated/pyeeg.io.AlignedSpeech.add_word_level_features", "generated/pyeeg.io.AlignedSpeech.create_word_level_features", "generated/pyeeg.io.AlignedSpeech.get_envelope", "generated/pyeeg.io.AlignedSpeech.samples_from_onset", "generated/pyeeg.io.WordLevelFeatures", "generated/pyeeg.io.WordLevelFeatures.align_word_features", "generated/pyeeg.io.WordLevelFeatures.summary", "generated/pyeeg.io.eeglab2mne", "generated/pyeeg.io.extract_duration_audio", "generated/pyeeg.io.extract_duration_praat", "generated/pyeeg.io.fieldtrip2mne", "generated/pyeeg.io.get_sentence_position", "generated/pyeeg.io.get_word_onsets", "generated/pyeeg.io.get_word_vectors", "generated/pyeeg.io.load_close_values", "generated/pyeeg.io.load_depth_values", "generated/pyeeg.io.load_ica_matrices", "generated/pyeeg.io.load_mat", "generated/pyeeg.io.load_open_values", "generated/pyeeg.io.load_surprisal_values", "generated/pyeeg.io.load_wordfreq_values", "generated/pyeeg.mcca.mCCA", "generated/pyeeg.mcca.mCCA.canonical_correlate_single", "generated/pyeeg.mcca.mCCA.denoise", "generated/pyeeg.mcca.mCCA.fit", "generated/pyeeg.mcca.mCCA.get_metadata_routing", "generated/pyeeg.mcca.mCCA.get_params", "generated/pyeeg.mcca.mCCA.plot_summary_components_variance", "generated/pyeeg.mcca.mCCA.set_params", "generated/pyeeg.models.TRFEstimator", "generated/pyeeg.models.TRFEstimator.apply_func", "generated/pyeeg.models.TRFEstimator.copy", "generated/pyeeg.models.TRFEstimator.fill_lags", "generated/pyeeg.models.TRFEstimator.fit", "generated/pyeeg.models.TRFEstimator.fromArray", "generated/pyeeg.models.TRFEstimator.get_metadata_routing", "generated/pyeeg.models.TRFEstimator.get_params", "generated/pyeeg.models.TRFEstimator.load", "generated/pyeeg.models.TRFEstimator.multialpha_score", "generated/pyeeg.models.TRFEstimator.plot", "generated/pyeeg.models.TRFEstimator.plot_multialpha_scores", "generated/pyeeg.models.TRFEstimator.plot_topomap", "generated/pyeeg.models.TRFEstimator.predict", "generated/pyeeg.models.TRFEstimator.save", "generated/pyeeg.models.TRFEstimator.score", "generated/pyeeg.models.TRFEstimator.select_best_coefs", "generated/pyeeg.models.TRFEstimator.set_fit_request", "generated/pyeeg.models.TRFEstimator.set_params", "generated/pyeeg.models.TRFEstimator.set_score_request", "generated/pyeeg.models.TRFEstimator.xfit", "generated/pyeeg.models._svd_regress", "generated/pyeeg.models.fit_ar", "generated/pyeeg.models.fit_var", "generated/pyeeg.preprocess.MultichanWienerFilter", "generated/pyeeg.preprocess.MultichanWienerFilter.fit", "generated/pyeeg.preprocess.MultichanWienerFilter.fit_transform", "generated/pyeeg.preprocess.MultichanWienerFilter.get_metadata_routing", "generated/pyeeg.preprocess.MultichanWienerFilter.get_params", "generated/pyeeg.preprocess.MultichanWienerFilter.set_fit_request", "generated/pyeeg.preprocess.MultichanWienerFilter.set_output", "generated/pyeeg.preprocess.MultichanWienerFilter.set_params", "generated/pyeeg.preprocess.MultichanWienerFilter.transorm", "generated/pyeeg.preprocess.WaveletTransform", "generated/pyeeg.preprocess.apply_filterbank", "generated/pyeeg.preprocess.covariance", "generated/pyeeg.preprocess.covariances", "generated/pyeeg.preprocess.covariances_extended", "generated/pyeeg.preprocess.create_filterbank", "generated/pyeeg.preprocess.get_power", "generated/pyeeg.utils._is_1d", "generated/pyeeg.utils.chunk_data", "generated/pyeeg.utils.find_knee_point", "generated/pyeeg.utils.fir_order", "generated/pyeeg.utils.is_pos_def", "generated/pyeeg.utils.lag_matrix", "generated/pyeeg.utils.lag_span", "generated/pyeeg.utils.lag_sparse", "generated/pyeeg.utils.mem_check", "generated/pyeeg.utils.moving_average", "generated/pyeeg.utils.rolling_func", "generated/pyeeg.utils.shift_array", "generated/pyeeg.utils.signal_envelope", "generated/pyeeg.vizu.colormap_masked", "generated/pyeeg.vizu.get_spatial_colors", "generated/pyeeg.vizu.pairwise_boxplots", "generated/pyeeg.vizu.plot_filterbank", "generated/pyeeg.vizu.plot_filterbank_output", "generated/pyeeg.vizu.plot_interactive", "generated/pyeeg.vizu.plot_trf_signi", "generated/pyeeg.vizu.plots_topogrid", "generated/pyeeg.vizu.significance_overlay", "generated/pyeeg.vizu.topomap", "generated/pyeeg.vizu.topoplot_array", "index", "install", "io", "models", "preprocess", "simulate", "tutorials", "usage", "utils", "vizu"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["about.rst", "examples\\CCA_envelope.ipynb", "examples\\TRF_syntactic_feats.ipynb", "examples\\TRF_wordonsets.ipynb", "examples\\import_WordVectors.ipynb", "generated\\pyeeg.cca.CCA_Estimator.rst", "generated\\pyeeg.cca.CCA_Estimator.fit.rst", "generated\\pyeeg.cca.CCA_Estimator.get_metadata_routing.rst", "generated\\pyeeg.cca.CCA_Estimator.get_params.rst", "generated\\pyeeg.cca.CCA_Estimator.plot_activation_map.rst", "generated\\pyeeg.cca.CCA_Estimator.plot_all_dim_time.rst", "generated\\pyeeg.cca.CCA_Estimator.plot_compact_time.rst", "generated\\pyeeg.cca.CCA_Estimator.plot_corr.rst", "generated\\pyeeg.cca.CCA_Estimator.plot_spatial_filter.rst", "generated\\pyeeg.cca.CCA_Estimator.plot_time_filter.rst", "generated\\pyeeg.cca.CCA_Estimator.set_fit_request.rst", "generated\\pyeeg.cca.CCA_Estimator.set_params.rst", "generated\\pyeeg.cca.CCA_Estimator.set_transform_request.rst", "generated\\pyeeg.cca.CCA_Estimator.transform.rst", "generated\\pyeeg.io.AlignedSpeech.rst", "generated\\pyeeg.io.AlignedSpeech.add_feature.rst", "generated\\pyeeg.io.AlignedSpeech.add_word_level_features.rst", "generated\\pyeeg.io.AlignedSpeech.create_word_level_features.rst", "generated\\pyeeg.io.AlignedSpeech.get_envelope.rst", "generated\\pyeeg.io.AlignedSpeech.samples_from_onset.rst", "generated\\pyeeg.io.WordLevelFeatures.rst", "generated\\pyeeg.io.WordLevelFeatures.align_word_features.rst", "generated\\pyeeg.io.WordLevelFeatures.summary.rst", "generated\\pyeeg.io.eeglab2mne.rst", "generated\\pyeeg.io.extract_duration_audio.rst", "generated\\pyeeg.io.extract_duration_praat.rst", "generated\\pyeeg.io.fieldtrip2mne.rst", "generated\\pyeeg.io.get_sentence_position.rst", "generated\\pyeeg.io.get_word_onsets.rst", "generated\\pyeeg.io.get_word_vectors.rst", "generated\\pyeeg.io.load_close_values.rst", "generated\\pyeeg.io.load_depth_values.rst", "generated\\pyeeg.io.load_ica_matrices.rst", "generated\\pyeeg.io.load_mat.rst", "generated\\pyeeg.io.load_open_values.rst", "generated\\pyeeg.io.load_surprisal_values.rst", "generated\\pyeeg.io.load_wordfreq_values.rst", "generated\\pyeeg.mcca.mCCA.rst", "generated\\pyeeg.mcca.mCCA.canonical_correlate_single.rst", "generated\\pyeeg.mcca.mCCA.denoise.rst", "generated\\pyeeg.mcca.mCCA.fit.rst", "generated\\pyeeg.mcca.mCCA.get_metadata_routing.rst", "generated\\pyeeg.mcca.mCCA.get_params.rst", "generated\\pyeeg.mcca.mCCA.plot_summary_components_variance.rst", "generated\\pyeeg.mcca.mCCA.set_params.rst", "generated\\pyeeg.models.TRFEstimator.rst", "generated\\pyeeg.models.TRFEstimator.apply_func.rst", "generated\\pyeeg.models.TRFEstimator.copy.rst", "generated\\pyeeg.models.TRFEstimator.fill_lags.rst", "generated\\pyeeg.models.TRFEstimator.fit.rst", "generated\\pyeeg.models.TRFEstimator.fromArray.rst", "generated\\pyeeg.models.TRFEstimator.get_metadata_routing.rst", "generated\\pyeeg.models.TRFEstimator.get_params.rst", "generated\\pyeeg.models.TRFEstimator.load.rst", "generated\\pyeeg.models.TRFEstimator.multialpha_score.rst", "generated\\pyeeg.models.TRFEstimator.plot.rst", "generated\\pyeeg.models.TRFEstimator.plot_multialpha_scores.rst", "generated\\pyeeg.models.TRFEstimator.plot_topomap.rst", "generated\\pyeeg.models.TRFEstimator.predict.rst", "generated\\pyeeg.models.TRFEstimator.save.rst", "generated\\pyeeg.models.TRFEstimator.score.rst", "generated\\pyeeg.models.TRFEstimator.select_best_coefs.rst", "generated\\pyeeg.models.TRFEstimator.set_fit_request.rst", "generated\\pyeeg.models.TRFEstimator.set_params.rst", "generated\\pyeeg.models.TRFEstimator.set_score_request.rst", "generated\\pyeeg.models.TRFEstimator.xfit.rst", "generated\\pyeeg.models._svd_regress.rst", "generated\\pyeeg.models.fit_ar.rst", "generated\\pyeeg.models.fit_var.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.fit.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.fit_transform.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.get_metadata_routing.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.get_params.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.set_fit_request.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.set_output.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.set_params.rst", "generated\\pyeeg.preprocess.MultichanWienerFilter.transorm.rst", "generated\\pyeeg.preprocess.WaveletTransform.rst", "generated\\pyeeg.preprocess.apply_filterbank.rst", "generated\\pyeeg.preprocess.covariance.rst", "generated\\pyeeg.preprocess.covariances.rst", "generated\\pyeeg.preprocess.covariances_extended.rst", "generated\\pyeeg.preprocess.create_filterbank.rst", "generated\\pyeeg.preprocess.get_power.rst", "generated\\pyeeg.utils._is_1d.rst", "generated\\pyeeg.utils.chunk_data.rst", "generated\\pyeeg.utils.find_knee_point.rst", "generated\\pyeeg.utils.fir_order.rst", "generated\\pyeeg.utils.is_pos_def.rst", "generated\\pyeeg.utils.lag_matrix.rst", "generated\\pyeeg.utils.lag_span.rst", "generated\\pyeeg.utils.lag_sparse.rst", "generated\\pyeeg.utils.mem_check.rst", "generated\\pyeeg.utils.moving_average.rst", "generated\\pyeeg.utils.rolling_func.rst", "generated\\pyeeg.utils.shift_array.rst", "generated\\pyeeg.utils.signal_envelope.rst", "generated\\pyeeg.vizu.colormap_masked.rst", "generated\\pyeeg.vizu.get_spatial_colors.rst", "generated\\pyeeg.vizu.pairwise_boxplots.rst", "generated\\pyeeg.vizu.plot_filterbank.rst", "generated\\pyeeg.vizu.plot_filterbank_output.rst", "generated\\pyeeg.vizu.plot_interactive.rst", "generated\\pyeeg.vizu.plot_trf_signi.rst", "generated\\pyeeg.vizu.plots_topogrid.rst", "generated\\pyeeg.vizu.significance_overlay.rst", "generated\\pyeeg.vizu.topomap.rst", "generated\\pyeeg.vizu.topoplot_array.rst", "index.rst", "install.rst", "io.rst", "models.rst", "preprocess.rst", "simulate.rst", "tutorials.rst", "usage.rst", "utils.rst", "vizu.rst"], "indexentries": {"_is_1d() (in module pyeeg.utils)": [[90, "pyeeg.utils._is_1d", false]], "_svd_regress() (in module pyeeg.models)": [[71, "pyeeg.models._svd_regress", false]], "add_feature() (pyeeg.io.alignedspeech method)": [[20, "pyeeg.io.AlignedSpeech.add_feature", false]], "add_word_level_features() (pyeeg.io.alignedspeech method)": [[21, "pyeeg.io.AlignedSpeech.add_word_level_features", false]], "align_word_features() (pyeeg.io.wordlevelfeatures method)": [[26, "pyeeg.io.WordLevelFeatures.align_word_features", false]], "alignedspeech (class in pyeeg.io)": [[19, "pyeeg.io.AlignedSpeech", false]], "apply_filterbank() (in module pyeeg.preprocess)": [[84, "pyeeg.preprocess.apply_filterbank", false]], "apply_func() (pyeeg.models.trfestimator method)": [[51, "pyeeg.models.TRFEstimator.apply_func", false]], "canonical_correlate_single() (pyeeg.mcca.mcca method)": [[42, "pyeeg.mcca.mCCA.canonical_correlate_single", false], [43, "pyeeg.mcca.mCCA.canonical_correlate_single", false]], "cca_estimator (class in pyeeg.cca)": [[5, "pyeeg.cca.CCA_Estimator", false]], "chunk_data() (in module pyeeg.utils)": [[91, "pyeeg.utils.chunk_data", false]], "coef_ (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.coef_", false]], "coef_ (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.coef_", false]], "colormap_masked() (in module pyeeg.vizu)": [[103, "pyeeg.vizu.colormap_masked", false]], "copy() (pyeeg.models.trfestimator method)": [[52, "pyeeg.models.TRFEstimator.copy", false]], "covariance() (in module pyeeg.preprocess)": [[85, "pyeeg.preprocess.covariance", false]], "covariances() (in module pyeeg.preprocess)": [[86, "pyeeg.preprocess.covariances", false]], "covariances_extended() (in module pyeeg.preprocess)": [[87, "pyeeg.preprocess.covariances_extended", false]], "create_filterbank() (in module pyeeg.preprocess)": [[88, "pyeeg.preprocess.create_filterbank", false]], "create_word_level_features() (pyeeg.io.alignedspeech method)": [[22, "pyeeg.io.AlignedSpeech.create_word_level_features", false]], "ctrnn (class in pyeeg.simulate)": [[119, "pyeeg.simulate.CTRNN", false]], "denoise() (pyeeg.mcca.mcca method)": [[42, "pyeeg.mcca.mCCA.denoise", false], [44, "pyeeg.mcca.mCCA.denoise", false]], "duration (pyeeg.io.alignedspeech attribute)": [[19, "pyeeg.io.AlignedSpeech.duration", false]], "duration (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.duration", false]], "eeglab2mne() (in module pyeeg.io)": [[28, "pyeeg.io.eeglab2mne", false]], "extract_duration_audio() (in module pyeeg.io)": [[29, "pyeeg.io.extract_duration_audio", false]], "extract_duration_praat() (in module pyeeg.io)": [[30, "pyeeg.io.extract_duration_praat", false]], "feat_names_ (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.feat_names_", false]], "feat_names_ (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.feat_names_", false]], "feats (pyeeg.io.alignedspeech attribute)": [[19, "pyeeg.io.AlignedSpeech.feats", false]], "fieldtrip2mne() (in module pyeeg.io)": [[31, "pyeeg.io.fieldtrip2mne", false]], "fill_lags() (pyeeg.models.trfestimator method)": [[53, "pyeeg.models.TRFEstimator.fill_lags", false]], "find_knee_point() (in module pyeeg.utils)": [[92, "pyeeg.utils.find_knee_point", false]], "fir_order() (in module pyeeg.utils)": [[93, "pyeeg.utils.fir_order", false]], "fit() (pyeeg.cca.cca_estimator method)": [[6, "pyeeg.cca.CCA_Estimator.fit", false]], "fit() (pyeeg.mcca.mcca method)": [[42, "pyeeg.mcca.mCCA.fit", false], [45, "pyeeg.mcca.mCCA.fit", false]], "fit() (pyeeg.models.trfestimator method)": [[54, "pyeeg.models.TRFEstimator.fit", false]], "fit() (pyeeg.preprocess.multichanwienerfilter method)": [[75, "pyeeg.preprocess.MultichanWienerFilter.fit", false]], "fit_ar() (in module pyeeg.models)": [[72, "pyeeg.models.fit_ar", false]], "fit_intercept (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.fit_intercept", false]], "fit_intercept (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.fit_intercept", false]], "fit_transform() (pyeeg.preprocess.multichanwienerfilter method)": [[76, "pyeeg.preprocess.MultichanWienerFilter.fit_transform", false]], "fit_var() (in module pyeeg.models)": [[73, "pyeeg.models.fit_var", false]], "fitted (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.fitted", false]], "fromarray() (pyeeg.models.trfestimator method)": [[55, "pyeeg.models.TRFEstimator.fromArray", false]], "get_envelope() (pyeeg.io.alignedspeech method)": [[23, "pyeeg.io.AlignedSpeech.get_envelope", false]], "get_metadata_routing() (pyeeg.cca.cca_estimator method)": [[7, "pyeeg.cca.CCA_Estimator.get_metadata_routing", false]], "get_metadata_routing() (pyeeg.mcca.mcca method)": [[46, "pyeeg.mcca.mCCA.get_metadata_routing", false]], "get_metadata_routing() (pyeeg.models.trfestimator method)": [[56, "pyeeg.models.TRFEstimator.get_metadata_routing", false]], "get_metadata_routing() (pyeeg.preprocess.multichanwienerfilter method)": [[77, "pyeeg.preprocess.MultichanWienerFilter.get_metadata_routing", false]], "get_params() (pyeeg.cca.cca_estimator method)": [[8, "pyeeg.cca.CCA_Estimator.get_params", false]], "get_params() (pyeeg.mcca.mcca method)": [[47, "pyeeg.mcca.mCCA.get_params", false]], "get_params() (pyeeg.models.trfestimator method)": [[57, "pyeeg.models.TRFEstimator.get_params", false]], "get_params() (pyeeg.preprocess.multichanwienerfilter method)": [[78, "pyeeg.preprocess.MultichanWienerFilter.get_params", false]], "get_power() (in module pyeeg.preprocess)": [[89, "pyeeg.preprocess.get_power", false]], "get_sentence_position() (in module pyeeg.io)": [[32, "pyeeg.io.get_sentence_position", false]], "get_spatial_colors() (in module pyeeg.vizu)": [[104, "pyeeg.vizu.get_spatial_colors", false]], "get_word_onsets() (in module pyeeg.io)": [[33, "pyeeg.io.get_word_onsets", false]], "get_word_vectors() (in module pyeeg.io)": [[34, "pyeeg.io.get_word_vectors", false]], "indices (pyeeg.io.alignedspeech attribute)": [[19, "pyeeg.io.AlignedSpeech.indices", false]], "intercept_ (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.intercept_", false]], "intercept_ (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.intercept_", false]], "is_pos_def() (in module pyeeg.utils)": [[94, "pyeeg.utils.is_pos_def", false]], "jansenrit (class in pyeeg.simulate)": [[119, "pyeeg.simulate.JansenRit", false]], "jansenritextended (class in pyeeg.simulate)": [[119, "pyeeg.simulate.JansenRitExtended", false]], "jrnetwork (class in pyeeg.simulate)": [[119, "pyeeg.simulate.JRNetwork", false]], "lag_matrix() (in module pyeeg.utils)": [[95, "pyeeg.utils.lag_matrix", false]], "lag_span() (in module pyeeg.utils)": [[96, "pyeeg.utils.lag_span", false]], "lag_sparse() (in module pyeeg.utils)": [[97, "pyeeg.utils.lag_sparse", false]], "lags (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.lags", false]], "lags (pyeeg.preprocess.multichanwienerfilter attribute)": [[74, "pyeeg.preprocess.MultichanWienerFilter.lags", false]], "load() (pyeeg.models.trfestimator method)": [[58, "pyeeg.models.TRFEstimator.load", false]], "load_close_values() (in module pyeeg.io)": [[35, "pyeeg.io.load_close_values", false]], "load_depth_values() (in module pyeeg.io)": [[36, "pyeeg.io.load_depth_values", false]], "load_ica_matrices() (in module pyeeg.io)": [[37, "pyeeg.io.load_ica_matrices", false]], "load_mat() (in module pyeeg.io)": [[38, "pyeeg.io.load_mat", false]], "load_open_values() (in module pyeeg.io)": [[39, "pyeeg.io.load_open_values", false]], "load_surprisal_values() (in module pyeeg.io)": [[40, "pyeeg.io.load_surprisal_values", false]], "load_wordfreq_values() (in module pyeeg.io)": [[41, "pyeeg.io.load_wordfreq_values", false]], "low_rank (pyeeg.preprocess.multichanwienerfilter attribute)": [[74, "pyeeg.preprocess.MultichanWienerFilter.low_rank", false]], "mcca (class in pyeeg.mcca)": [[42, "pyeeg.mcca.mCCA", false]], "mem_check() (in module pyeeg.utils)": [[98, "pyeeg.utils.mem_check", false]], "mixing (pyeeg.mcca.mcca attribute)": [[42, "pyeeg.mcca.mCCA.mixing", false]], "module": [[116, "module-pyeeg.io", false], [117, "module-pyeeg.models", false], [118, "module-pyeeg.preprocess", false], [119, "module-pyeeg.simulate", false], [122, "module-pyeeg.utils", false], [123, "module-pyeeg.vizu", false]], "moving_average() (in module pyeeg.utils)": [[99, "pyeeg.utils.moving_average", false]], "multialpha_score() (pyeeg.models.trfestimator method)": [[59, "pyeeg.models.TRFEstimator.multialpha_score", false]], "multichanwienerfilter (class in pyeeg.preprocess)": [[74, "pyeeg.preprocess.MultichanWienerFilter", false]], "n_chans_ (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.n_chans_", false]], "n_chans_ (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.n_chans_", false]], "n_components (pyeeg.mcca.mcca attribute)": [[42, "pyeeg.mcca.mCCA.n_components", false]], "n_feats_ (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.n_feats_", false]], "n_feats_ (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.n_feats_", false]], "neuralmassnetwork (class in pyeeg.simulate)": [[119, "pyeeg.simulate.NeuralMassNetwork", false]], "neuralmassnode (class in pyeeg.simulate)": [[119, "pyeeg.simulate.NeuralMassNode", false]], "onset_list (pyeeg.io.alignedspeech attribute)": [[19, "pyeeg.io.AlignedSpeech.onset_list", false]], "pairwise_boxplots() (in module pyeeg.vizu)": [[105, "pyeeg.vizu.pairwise_boxplots", false]], "plot() (pyeeg.models.trfestimator method)": [[60, "pyeeg.models.TRFEstimator.plot", false]], "plot_activation_map() (pyeeg.cca.cca_estimator method)": [[9, "pyeeg.cca.CCA_Estimator.plot_activation_map", false]], "plot_all_dim_time() (pyeeg.cca.cca_estimator method)": [[10, "pyeeg.cca.CCA_Estimator.plot_all_dim_time", false]], "plot_compact_time() (pyeeg.cca.cca_estimator method)": [[11, "pyeeg.cca.CCA_Estimator.plot_compact_time", false]], "plot_corr() (pyeeg.cca.cca_estimator method)": [[12, "pyeeg.cca.CCA_Estimator.plot_corr", false]], "plot_filterbank() (in module pyeeg.vizu)": [[106, "pyeeg.vizu.plot_filterbank", false]], "plot_filterbank_output() (in module pyeeg.vizu)": [[107, "pyeeg.vizu.plot_filterbank_output", false]], "plot_interactive() (in module pyeeg.vizu)": [[108, "pyeeg.vizu.plot_interactive", false]], "plot_multialpha_scores() (pyeeg.models.trfestimator method)": [[61, "pyeeg.models.TRFEstimator.plot_multialpha_scores", false]], "plot_spatial_filter() (pyeeg.cca.cca_estimator method)": [[13, "pyeeg.cca.CCA_Estimator.plot_spatial_filter", false]], "plot_summary_components_variance() (pyeeg.mcca.mcca method)": [[48, "pyeeg.mcca.mCCA.plot_summary_components_variance", false]], "plot_time_filter() (pyeeg.cca.cca_estimator method)": [[14, "pyeeg.cca.CCA_Estimator.plot_time_filter", false]], "plot_topomap() (pyeeg.models.trfestimator method)": [[62, "pyeeg.models.TRFEstimator.plot_topomap", false]], "plot_trf_signi() (in module pyeeg.vizu)": [[109, "pyeeg.vizu.plot_trf_signi", false]], "plots_topogrid() (in module pyeeg.vizu)": [[110, "pyeeg.vizu.plots_topogrid", false]], "predict() (pyeeg.models.trfestimator method)": [[63, "pyeeg.models.TRFEstimator.predict", false]], "pyeeg.io": [[116, "module-pyeeg.io", false]], "pyeeg.models": [[117, "module-pyeeg.models", false]], "pyeeg.preprocess": [[118, "module-pyeeg.preprocess", false]], "pyeeg.simulate": [[119, "module-pyeeg.simulate", false]], "pyeeg.utils": [[122, "module-pyeeg.utils", false]], "pyeeg.vizu": [[123, "module-pyeeg.vizu", false]], "rolling_func() (in module pyeeg.utils)": [[100, "pyeeg.utils.rolling_func", false]], "samples_from_onset() (pyeeg.io.alignedspeech method)": [[24, "pyeeg.io.AlignedSpeech.samples_from_onset", false]], "save() (pyeeg.models.trfestimator method)": [[64, "pyeeg.models.TRFEstimator.save", false]], "score() (pyeeg.models.trfestimator method)": [[65, "pyeeg.models.TRFEstimator.score", false]], "select_best_coefs() (pyeeg.models.trfestimator method)": [[66, "pyeeg.models.TRFEstimator.select_best_coefs", false]], "set_fit_request() (pyeeg.cca.cca_estimator method)": [[15, "pyeeg.cca.CCA_Estimator.set_fit_request", false]], "set_fit_request() (pyeeg.models.trfestimator method)": [[67, "pyeeg.models.TRFEstimator.set_fit_request", false]], "set_fit_request() (pyeeg.preprocess.multichanwienerfilter method)": [[79, "pyeeg.preprocess.MultichanWienerFilter.set_fit_request", false]], "set_output() (pyeeg.preprocess.multichanwienerfilter method)": [[80, "pyeeg.preprocess.MultichanWienerFilter.set_output", false]], "set_params() (pyeeg.cca.cca_estimator method)": [[16, "pyeeg.cca.CCA_Estimator.set_params", false]], "set_params() (pyeeg.mcca.mcca method)": [[49, "pyeeg.mcca.mCCA.set_params", false]], "set_params() (pyeeg.models.trfestimator method)": [[68, "pyeeg.models.TRFEstimator.set_params", false]], "set_params() (pyeeg.preprocess.multichanwienerfilter method)": [[81, "pyeeg.preprocess.MultichanWienerFilter.set_params", false]], "set_score_request() (pyeeg.models.trfestimator method)": [[69, "pyeeg.models.TRFEstimator.set_score_request", false]], "set_transform_request() (pyeeg.cca.cca_estimator method)": [[17, "pyeeg.cca.CCA_Estimator.set_transform_request", false]], "shift_array() (in module pyeeg.utils)": [[101, "pyeeg.utils.shift_array", false]], "signal_envelope() (in module pyeeg.utils)": [[102, "pyeeg.utils.signal_envelope", false]], "significance_overlay() (in module pyeeg.vizu)": [[111, "pyeeg.vizu.significance_overlay", false]], "simulate() (pyeeg.simulate.ctrnn method)": [[119, "pyeeg.simulate.CTRNN.simulate", false]], "simulate() (pyeeg.simulate.jansenrit method)": [[119, "pyeeg.simulate.JansenRit.simulate", false]], "simulate() (pyeeg.simulate.jansenritextended method)": [[119, "pyeeg.simulate.JansenRitExtended.simulate", false]], "simulate_ar() (in module pyeeg.simulate)": [[119, "pyeeg.simulate.simulate_ar", false]], "simulate_var() (in module pyeeg.simulate)": [[119, "pyeeg.simulate.simulate_var", false]], "simulate_var_from_cov() (in module pyeeg.simulate)": [[119, "pyeeg.simulate.simulate_var_from_cov", false]], "srate (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.srate", false]], "srate (pyeeg.io.alignedspeech attribute)": [[19, "pyeeg.io.AlignedSpeech.srate", false]], "srate (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.srate", false]], "step() (pyeeg.simulate.ctrnn method)": [[119, "pyeeg.simulate.CTRNN.step", false]], "step() (pyeeg.simulate.jansenrit method)": [[119, "pyeeg.simulate.JansenRit.step", false]], "step() (pyeeg.simulate.jansenritextended method)": [[119, "pyeeg.simulate.JansenRitExtended.step", false]], "summary() (pyeeg.io.wordlevelfeatures method)": [[27, "pyeeg.io.WordLevelFeatures.summary", false]], "surprisal (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.surprisal", false]], "thresh (pyeeg.preprocess.multichanwienerfilter attribute)": [[74, "pyeeg.preprocess.MultichanWienerFilter.thresh", false]], "times (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.times", false]], "times (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.times", false]], "topomap() (in module pyeeg.vizu)": [[112, "pyeeg.vizu.topomap", false]], "topoplot_array() (in module pyeeg.vizu)": [[113, "pyeeg.vizu.topoplot_array", false]], "transform() (pyeeg.cca.cca_estimator method)": [[18, "pyeeg.cca.CCA_Estimator.transform", false]], "transorm() (pyeeg.preprocess.multichanwienerfilter method)": [[82, "pyeeg.preprocess.MultichanWienerFilter.transorm", false]], "trfestimator (class in pyeeg.models)": [[50, "pyeeg.models.TRFEstimator", false]], "update_connectivity() (pyeeg.simulate.jrnetwork method)": [[119, "pyeeg.simulate.JRNetwork.update_connectivity", false]], "use_regularisation (pyeeg.models.trfestimator attribute)": [[50, "pyeeg.models.TRFEstimator.use_regularisation", false]], "vectordim (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.vectordim", false]], "w_ (pyeeg.preprocess.multichanwienerfilter attribute)": [[74, "pyeeg.preprocess.MultichanWienerFilter.W_", false]], "wavelettransform (in module pyeeg.preprocess)": [[83, "pyeeg.preprocess.WaveletTransform", false]], "wordfrequency (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.wordfrequency", false]], "wordlevelfeatures (class in pyeeg.io)": [[25, "pyeeg.io.WordLevelFeatures", false]], "wordlist (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.wordlist", false]], "wordonsets (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.wordonsets", false]], "wordvectors (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.wordvectors", false]], "wordvectors_matrix (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.wordvectors_matrix", false]], "wordvectors_vocab (pyeeg.io.wordlevelfeatures attribute)": [[25, "pyeeg.io.WordLevelFeatures.wordvectors_vocab", false]], "xfit() (pyeeg.models.trfestimator method)": [[70, "pyeeg.models.TRFEstimator.xfit", false]], "xlags (pyeeg.cca.cca_estimator attribute)": [[5, "pyeeg.cca.CCA_Estimator.xlags", false]]}, "objects": {"pyeeg": [[116, 3, 0, "-", "io"], [117, 3, 0, "-", "models"], [118, 3, 0, "-", "preprocess"], [119, 3, 0, "-", "simulate"], [122, 3, 0, "-", "utils"], [123, 3, 0, "-", "vizu"]], "pyeeg.cca": [[5, 0, 1, "", "CCA_Estimator"]], "pyeeg.cca.CCA_Estimator": [[5, 1, 1, "", "coef_"], [5, 1, 1, "", "feat_names_"], [6, 2, 1, "", "fit"], [5, 1, 1, "", "fit_intercept"], [7, 2, 1, "", "get_metadata_routing"], [8, 2, 1, "", "get_params"], [5, 1, 1, "", "intercept_"], [5, 1, 1, "", "n_chans_"], [5, 1, 1, "", "n_feats_"], [9, 2, 1, "", "plot_activation_map"], [10, 2, 1, "", "plot_all_dim_time"], [11, 2, 1, "", "plot_compact_time"], [12, 2, 1, "", "plot_corr"], [13, 2, 1, "", "plot_spatial_filter"], [14, 2, 1, "", "plot_time_filter"], [15, 2, 1, "", "set_fit_request"], [16, 2, 1, "", "set_params"], [17, 2, 1, "", "set_transform_request"], [5, 1, 1, "", "srate"], [5, 1, 1, "", "times"], [18, 2, 1, "", "transform"], [5, 1, 1, "", "xlags"]], "pyeeg.io": [[19, 0, 1, "", "AlignedSpeech"], [25, 0, 1, "", "WordLevelFeatures"], [28, 4, 1, "", "eeglab2mne"], [29, 4, 1, "", "extract_duration_audio"], [30, 4, 1, "", "extract_duration_praat"], [31, 4, 1, "", "fieldtrip2mne"], [32, 4, 1, "", "get_sentence_position"], [33, 4, 1, "", "get_word_onsets"], [34, 4, 1, "", "get_word_vectors"], [35, 4, 1, "", "load_close_values"], [36, 4, 1, "", "load_depth_values"], [37, 4, 1, "", "load_ica_matrices"], [38, 4, 1, "", "load_mat"], [39, 4, 1, "", "load_open_values"], [40, 4, 1, "", "load_surprisal_values"], [41, 4, 1, "", "load_wordfreq_values"]], "pyeeg.io.AlignedSpeech": [[20, 2, 1, "", "add_feature"], [21, 2, 1, "", "add_word_level_features"], [22, 2, 1, "", "create_word_level_features"], [19, 1, 1, "", "duration"], [19, 1, 1, "", "feats"], [23, 2, 1, "", "get_envelope"], [19, 1, 1, "", "indices"], [19, 1, 1, "", "onset_list"], [24, 2, 1, "", "samples_from_onset"], [19, 1, 1, "", "srate"]], "pyeeg.io.WordLevelFeatures": [[26, 2, 1, "", "align_word_features"], [25, 1, 1, "", "duration"], [27, 2, 1, "", "summary"], [25, 1, 1, "", "surprisal"], [25, 1, 1, "", "vectordim"], [25, 1, 1, "", "wordfrequency"], [25, 1, 1, "", "wordlist"], [25, 1, 1, "", "wordonsets"], [25, 1, 1, "", "wordvectors"], [25, 1, 1, "", "wordvectors_matrix"], [25, 1, 1, "", "wordvectors_vocab"]], "pyeeg.mcca": [[42, 0, 1, "", "mCCA"]], "pyeeg.mcca.mCCA": [[43, 2, 1, "", "canonical_correlate_single"], [44, 2, 1, "", "denoise"], [45, 2, 1, "", "fit"], [46, 2, 1, "", "get_metadata_routing"], [47, 2, 1, "", "get_params"], [42, 1, 1, "", "mixing"], [42, 1, 1, "", "n_components"], [48, 2, 1, "", "plot_summary_components_variance"], [49, 2, 1, "", "set_params"]], "pyeeg.models": [[50, 0, 1, "", "TRFEstimator"], [71, 4, 1, "", "_svd_regress"], [72, 4, 1, "", "fit_ar"], [73, 4, 1, "", "fit_var"]], "pyeeg.models.TRFEstimator": [[51, 2, 1, "", "apply_func"], [50, 1, 1, "", "coef_"], [52, 2, 1, "", "copy"], [50, 1, 1, "", "feat_names_"], [53, 2, 1, "", "fill_lags"], [54, 2, 1, "", "fit"], [50, 1, 1, "", "fit_intercept"], [50, 1, 1, "", "fitted"], [55, 2, 1, "", "fromArray"], [56, 2, 1, "", "get_metadata_routing"], [57, 2, 1, "", "get_params"], [50, 1, 1, "", "intercept_"], [50, 1, 1, "", "lags"], [58, 2, 1, "", "load"], [59, 2, 1, "", "multialpha_score"], [50, 1, 1, "", "n_chans_"], [50, 1, 1, "", "n_feats_"], [60, 2, 1, "", "plot"], [61, 2, 1, "", "plot_multialpha_scores"], [62, 2, 1, "", "plot_topomap"], [63, 2, 1, "", "predict"], [64, 2, 1, "", "save"], [65, 2, 1, "", "score"], [66, 2, 1, "", "select_best_coefs"], [67, 2, 1, "", "set_fit_request"], [68, 2, 1, "", "set_params"], [69, 2, 1, "", "set_score_request"], [50, 1, 1, "", "srate"], [50, 1, 1, "", "times"], [50, 1, 1, "", "use_regularisation"], [70, 2, 1, "", "xfit"]], "pyeeg.preprocess": [[74, 0, 1, "", "MultichanWienerFilter"], [83, 1, 1, "", "WaveletTransform"], [84, 4, 1, "", "apply_filterbank"], [85, 4, 1, "", "covariance"], [86, 4, 1, "", "covariances"], [87, 4, 1, "", "covariances_extended"], [88, 4, 1, "", "create_filterbank"], [89, 4, 1, "", "get_power"]], "pyeeg.preprocess.MultichanWienerFilter": [[74, 1, 1, "", "W_"], [75, 2, 1, "", "fit"], [76, 2, 1, "", "fit_transform"], [77, 2, 1, "", "get_metadata_routing"], [78, 2, 1, "", "get_params"], [74, 1, 1, "", "lags"], [74, 1, 1, "", "low_rank"], [79, 2, 1, "", "set_fit_request"], [80, 2, 1, "", "set_output"], [81, 2, 1, "", "set_params"], [74, 1, 1, "", "thresh"], [82, 2, 1, "", "transorm"]], "pyeeg.simulate": [[119, 0, 1, "", "CTRNN"], [119, 0, 1, "", "JRNetwork"], [119, 0, 1, "", "JansenRit"], [119, 0, 1, "", "JansenRitExtended"], [119, 0, 1, "", "NeuralMassNetwork"], [119, 0, 1, "", "NeuralMassNode"], [119, 4, 1, "", "simulate_ar"], [119, 4, 1, "", "simulate_var"], [119, 4, 1, "", "simulate_var_from_cov"]], "pyeeg.simulate.CTRNN": [[119, 2, 1, "", "simulate"], [119, 2, 1, "", "step"]], "pyeeg.simulate.JRNetwork": [[119, 2, 1, "", "update_connectivity"]], "pyeeg.simulate.JansenRit": [[119, 2, 1, "", "simulate"], [119, 2, 1, "", "step"]], "pyeeg.simulate.JansenRitExtended": [[119, 2, 1, "", "simulate"], [119, 2, 1, "", "step"]], "pyeeg.utils": [[90, 4, 1, "", "_is_1d"], [91, 4, 1, "", "chunk_data"], [92, 4, 1, "", "find_knee_point"], [93, 4, 1, "", "fir_order"], [94, 4, 1, "", "is_pos_def"], [95, 4, 1, "", "lag_matrix"], [96, 4, 1, "", "lag_span"], [97, 4, 1, "", "lag_sparse"], [98, 4, 1, "", "mem_check"], [99, 4, 1, "", "moving_average"], [100, 4, 1, "", "rolling_func"], [101, 4, 1, "", "shift_array"], [102, 4, 1, "", "signal_envelope"]], "pyeeg.vizu": [[103, 4, 1, "", "colormap_masked"], [104, 4, 1, "", "get_spatial_colors"], [105, 4, 1, "", "pairwise_boxplots"], [106, 4, 1, "", "plot_filterbank"], [107, 4, 1, "", "plot_filterbank_output"], [108, 4, 1, "", "plot_interactive"], [109, 4, 1, "", "plot_trf_signi"], [110, 4, 1, "", "plots_topogrid"], [111, 4, 1, "", "significance_overlay"], [112, 4, 1, "", "topomap"], [113, 4, 1, "", "topoplot_array"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:module", "4": "py:function"}, "terms": {"": [2, 3, 4, 16, 25, 34, 42, 49, 54, 64, 68, 81, 115, 119], "0": [1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 18, 25, 41, 50, 54, 71, 72, 73, 74, 91, 92, 93, 95, 101, 102, 103, 105, 111, 118, 119, 120, 121], "0001": 119, "001": 119, "01": 119, "012": 119, "02157739893299738": 1, "05": [103, 111, 121], "050": 2, "05479706": 1, "06242088": 1, "06393436": 1, "072": [2, 3], "07879453": 4, "08": 25, "09271022": 4, "0x1d915cf45f8": 1, "0x1d915cf4748": 1, "1": [1, 2, 3, 4, 5, 6, 9, 12, 13, 14, 15, 17, 25, 50, 54, 67, 69, 70, 72, 73, 79, 80, 84, 89, 91, 93, 95, 100, 101, 102, 105, 107, 111, 118, 119, 121], "10": [1, 3, 93, 95, 102, 117, 119], "100": [2, 3, 4, 119, 121], "1000": 50, "100mb": [2, 3], "11": [1, 2, 3, 25, 95, 117], "111773390": 41, "1146835": 4, "12": [1, 2, 3, 25, 40, 95, 121], "125": [1, 2, 3, 25, 50, 89, 96, 97, 102, 118, 120], "125hz": 102, "12gb": [2, 3], "13": [1, 3, 25], "135": 119, "13947855": 1, "14": [1, 2, 3], "1482251": 1, "15": [1, 2, 3, 121], "150": 119, "159": 25, "16": 1, "17": 1, "18": [1, 3], "184": [2, 3], "19": [1, 3, 4], "196638": 4, "1995": 119, "1d": [5, 50, 65, 96, 97], "1darrai": [92, 105], "1e": [2, 3, 40], "1e3": 121, "2": [1, 2, 3, 4, 6, 10, 11, 25, 50, 70, 88, 93, 95, 99, 100, 101, 102, 105, 118, 119, 121], "20": [1, 2, 3, 23, 102], "2003": 119, "2004": 119, "2006": 119, "2018": 42, "2020": 119, "2022": 119, "2023": [117, 119], "202895": 25, "20hz": 102, "21": [2, 3], "214926": 25, "22": [2, 3, 93, 119], "23": 2, "2383": 1, "24": 2, "25": [25, 119], "250": 4, "256": 103, "26": [2, 3], "26gb": [2, 3], "27": [2, 3, 25], "29": 2, "292": 119, "2c": [2, 3], "2d": 101, "2e5065e9feea": 2, "2gb": [2, 3], "3": [1, 2, 3, 4, 15, 17, 25, 50, 67, 69, 79, 93, 95, 102, 103, 116, 118, 119], "30": [2, 3, 121], "300": 2, "300234": 25, "304": 1, "315": 1, "32": 2, "3213700000000": 41, "324": 1, "3333333333333333": 102, "335": 3, "34": 2, "3463": 1, "350": [2, 4], "357": 119, "366": 119, "39": [1, 2, 3], "3d": 55, "4": [1, 2, 3, 4, 25, 80, 95, 119, 121], "413": 1, "42": 119, "44287862": 94, "45": [1, 2, 3], "490275": 4, "5": [1, 2, 3, 50, 70, 95, 103, 105, 119, 121], "50": 119, "500": 119, "521181": 25, "527839": 25, "5303618": 94, "555537": 25, "56": 119, "584": [2, 3], "592": [2, 3], "6": [1, 2, 3, 25, 95, 119], "60": 93, "631021": 25, "631348": 25, "64": [2, 3], "65": [2, 3], "7": [1, 3, 95, 116], "720567": 25, "73": 119, "74636799": 4, "792": [2, 3], "8": [1, 2, 3, 25, 95, 119, 121], "9": [1, 25, 95], "95": 92, "981747": 25, "99": 1, "999": 1, "A": [7, 42, 46, 51, 56, 71, 74, 77, 94, 114, 118, 119], "Be": 25, "But": [2, 3], "By": 115, "For": [2, 3, 22, 25, 70, 87, 118, 119, 122], "If": [0, 8, 25, 26, 37, 47, 57, 63, 65, 70, 71, 72, 74, 78, 85, 86, 89, 93, 95, 115, 118], "In": [1, 2, 3, 87, 96, 102, 117, 118], "It": [74, 114, 118], "NOT": [74, 118], "No": [43, 44, 45, 121], "On": 115, "One": [86, 118], "Or": 3, "The": [0, 2, 3, 15, 16, 17, 19, 20, 22, 26, 30, 32, 42, 49, 51, 65, 67, 68, 69, 70, 71, 74, 79, 81, 86, 87, 92, 95, 102, 105, 118, 119], "Then": [1, 2, 3, 115], "These": [26, 116], "To": [1, 74, 92, 115, 118, 120], "Will": [1, 24, 26, 85, 118], "With": 121, "_": [2, 3, 5, 50], "_125hz": [3, 4, 25], "__": [16, 49, 68, 81], "___________": 119, "_allsynt": 2, "_arraytool": 1, "_before_": 53, "_check_est": [86, 118], "_reducing_": 65, "_samples_": [95, 96, 97], "_svd_regress": [50, 114], "_time": 25, "_trf_": 117, "_whitened_": 37, "_word_freq_tim": [3, 4, 25], "a_1": 119, "a_2": 119, "a_i": 119, "a_p": 119, "a_slic": 1, "aax": 121, "ab": [1, 2, 3, 102, 103], "abl": [25, 26, 115], "about": 114, "abov": [74, 118], "absolut": 38, "absolute_offset": 1, "absolute_onset": 1, "abstract": 119, "ac": 0, "ac6796d11510": 3, "accumul": [2, 3, 71], "achiev": 65, "across": [2, 3, 65, 85, 87, 118], "activ": [9, 42], "actual": [5, 19, 21, 25, 33, 50], "ad": [5, 15, 17, 20, 50, 54, 67, 69, 79, 80, 117, 118, 119], "add": [0, 20, 21, 23, 74, 118, 119, 121], "add_featur": 22, "add_signi": 105, "add_subplot": 121, "add_word_level_featur": [3, 22], "addit": [118, 119], "adjac": 92, "adul": 4, "after": 50, "afternoon": 25, "again": 115, "against": 61, "aimless": 4, "al": [42, 74, 118, 119], "algorithm": [74, 118], "alia": [15, 17, 67, 69, 79, 83, 118], "align": [2, 3, 19, 20, 21, 25, 116], "align_word_featur": [2, 3, 4, 25], "alignedspeech": [2, 3, 114, 120], "alignement_data": [2, 3, 4, 25], "alignment_data": 25, "all": [1, 2, 3, 25, 36, 50, 51, 60, 85, 86, 111, 114, 119, 121, 123], "all_eeg_ord": 1, "all_katerina_onset": [2, 3], "all_raw_stori": 1, "all_tim": 1, "allow": [2, 3, 15, 17, 50, 67, 69, 79, 118], "along": [25, 33, 122], "alpha": [2, 3, 50, 61, 66, 70, 71, 103, 121], "alreadi": [63, 75, 118], "also": [2, 3, 21, 62, 86, 87, 102, 118, 122], "alwai": [2, 3, 26], "among": 70, "amp": 1, "amplitud": [2, 3, 119], "an": [0, 1, 2, 3, 5, 15, 17, 20, 21, 26, 29, 50, 51, 67, 69, 71, 72, 79, 80, 87, 90, 96, 97, 101, 116, 118, 119, 122], "analysi": [2, 3, 114], "analyz": 0, "angl": 92, "ani": [2, 3, 22, 111, 115], "annot": [1, 74, 111, 118], "anoth": [1, 2, 3, 87, 115, 116, 118], "anyth": 0, "api": 80, "appdata": 1, "appear": 34, "append": [1, 2, 3, 87, 118], "appli": [26, 51, 70, 84, 89, 91, 95, 100, 101, 118, 122], "apply_filterbank": [114, 118], "approxim": [2, 3, 74, 118], "ar": [0, 2, 3, 5, 8, 15, 17, 25, 26, 37, 47, 50, 54, 57, 67, 69, 70, 71, 75, 78, 79, 87, 88, 95, 102, 116, 117, 118, 119, 123], "arang": 121, "arbitrari": [2, 3, 22, 50], "arbitrarili": 95, "archiv": [58, 115], "arg": [28, 31, 108, 110, 112, 113], "argmin": [2, 3, 103], "argument": [1, 50, 88, 118], "around": [74, 118], "arr": [1, 55, 90, 101], "arr1": 105, "arr2": 105, "arrai": [1, 2, 3, 5, 6, 24, 25, 26, 45, 50, 51, 54, 55, 60, 65, 66, 71, 86, 90, 91, 95, 96, 97, 101, 114, 118, 119], "array_lik": 119, "artifact": [74, 75, 82, 118], "artifactu": [74, 118], "as_strid": 101, "asarrai": [2, 3, 95], "ask": 0, "assertionerror": [26, 64, 71], "assign": [26, 34], "associ": [23, 25], "assum": [25, 26, 87, 118], "asterix": 111, "attach": 22, "atten": 93, "attenu": 93, "attribut": [5, 26, 50, 53], "audio": [19, 25, 29, 30, 120], "audio_path": 2, "aunp01": [2, 3], "aunp02": [2, 3], "aunp03": [2, 3], "aunp04": [2, 3], "aunp05": [2, 3], "aunp06": [2, 3], "aunp07": [2, 3], "aunp08": [2, 3], "automat": [74, 118], "autoregress": [72, 73, 119], "avail": [98, 102], "averag": [71, 87, 89, 118, 119, 122], "avoid": [1, 95], "awai": 101, "ax": [2, 3, 60, 62, 105, 109, 111, 121], "ax_wid": 121, "axi": [2, 3, 48, 72, 73, 84, 89, 91, 101, 107, 111, 118, 122], "axvlin": [2, 3], "b": [1, 84, 118, 119, 121], "backward": [117, 122], "bad": [74, 118], "bale": 25, "band": [1, 88, 118], "bandwidth": 93, "bank": [88, 118], "bar": 111, "barh": 111, "barplot": 111, "base": [25, 63, 74, 118, 119, 121], "bashfulest": 4, "bat": 115, "becaus": [1, 2, 3], "bedmak": 4, "been": [5, 26, 50, 54, 66], "befor": [26, 99, 115], "beforehand": 26, "begin": [2, 3], "being": [20, 25, 54, 103, 115], "below": 103, "ben": [74, 118], "benefici": 115, "best": [1, 66, 70], "best_index": 66, "beta": [63, 71, 72, 73, 119], "between": [12, 92, 105, 117, 119], "bia": 118, "binari": [25, 64], "biolog": 119, "biorxiv": 42, "blink_prun": [2, 3], "blush": 4, "bool": [5, 8, 15, 17, 19, 25, 47, 50, 54, 57, 66, 67, 69, 74, 75, 78, 79, 89, 92, 95, 118], "boolean": 26, "both": [2, 3, 71, 74, 118], "boundari": [1, 2, 3, 88, 118], "box": 105, "boxalpha": 105, "boxplot": 105, "bp": [2, 3], "brain": [42, 119], "branch": [0, 115], "broadband": [102, 119], "brop01": [2, 3], "brop02": [2, 3], "brop03": [2, 3], "buffer": 101, "build": 115, "bulk": [2, 3], "butter": [1, 121], "butterfli": 60, "c": [1, 86, 118], "c1": 119, "c2": 119, "c3": 119, "c4": 119, "c_": 121, "c_ij": 119, "call": [0, 50, 53, 87, 91, 99, 118], "callabl": [51, 65], "can": [0, 1, 2, 3, 25, 34, 50, 54, 60, 62, 63, 65, 66, 74, 86, 95, 102, 115, 117, 118, 121], "cannot": [1, 2, 3], "canon": [5, 43], "canonical_correlate_singl": 42, "captur": 119, "carri": 42, "case": [2, 3, 42, 71, 87, 118], "caution": 101, "cca": [114, 117, 118, 120], "cca_": 1, "cca_estim": [1, 114], "cca_implement": [1, 6, 15], "center": [26, 88, 118], "certain": 102, "ch_name": 1, "chang": [1, 15, 17, 67, 69, 79, 105, 115, 118, 121], "channel": [1, 2, 3, 5, 12, 42, 45, 50, 65, 74, 84, 85, 86, 87, 104, 107, 118, 121], "characteris": 122, "cheby2": [88, 118], "chebychev": [88, 118], "check": [7, 26, 46, 56, 77, 90, 94, 95, 115], "cheveign\u00e9": 42, "choic": 25, "chosen": 1, "chunk_data": [99, 101], "class": [2, 3, 4, 5, 19, 24, 25, 26, 42, 50, 74, 75, 114], "clean": [32, 74, 75, 87, 115, 118], "clip_right_elem": 1, "clone": 0, "close": [2, 22, 25, 34, 35, 36, 39], "close1": [35, 36, 39], "closest": [25, 34], "cm": 103, "cmap": [2, 3, 103], "code": [0, 74, 115, 118, 120], "coef": [2, 3, 119], "coef_": [2, 3, 5, 6, 50, 51, 54], "coef_avg": [2, 3], "coeffici": [2, 3, 5, 18, 50, 63, 66, 71, 72, 73, 74, 118, 119], "color": [2, 3, 60, 111], "colorbar": [2, 3], "colormap": 103, "colormap_mask": 114, "colour": 104, "column": [5, 20, 33, 50, 63, 119], "com": [0, 94], "come": 107, "comma": 33, "common": 42, "comp": [17, 18], "comp_factor": 102, "compat": 25, "compoen": 42, "compon": [1, 12, 16, 43, 49, 68, 81, 119], "compress": 102, "comput": [5, 25, 26, 42, 50, 63, 65, 71, 85, 89, 102, 118, 119], "concaten": [1, 2, 3, 25, 50, 85, 118], "conda": 1, "conduct": 119, "configur": 80, "confus": 95, "connect": 119, "consid": [74, 118], "constant": 119, "construct": [1, 2, 3], "contain": [8, 22, 25, 26, 27, 33, 37, 38, 47, 57, 74, 78, 80, 115, 118, 122], "contamin": [74, 75, 118], "context": [0, 114], "contigu": [70, 95], "continu": [87, 114, 116, 118, 119, 121], "contour": [2, 3], "contribut": 119, "contributor": 0, "control": [60, 119], "convolv": [87, 118, 121], "cookbook": 122, "coordin": [92, 111], "copi": [1, 2, 3, 101], "core": [89, 118], "corr": 65, "correct": 26, "correctli": [74, 116, 118], "correl": [5, 12, 43], "correpsond": 25, "correspond": [5, 19, 24, 25, 26, 34, 50, 74, 118], "cortic": 119, "could": [87, 118], "count": 25, "coupl": 119, "cov": [85, 86, 87, 118, 119], "cov_data": [75, 76, 79, 118], "covari": [2, 3, 71, 74, 75, 87, 114, 118, 119], "covariances_extend": [114, 118], "cowan": 119, "creat": [0, 1, 2, 3, 22, 25, 26, 55, 58, 63, 88, 95, 96, 97, 103, 104, 106, 115, 118, 121, 122], "create_filterbank": [106, 114, 118], "create_word_level_featur": [2, 21], "critic": 119, "crope": [2, 3], "cross": [2, 3, 65, 70], "csv": [2, 3, 4, 25, 33], "ctrnn": [114, 119], "cumsum": 1, "current": [2, 3, 20, 24, 25, 63, 64], "curv": 92, "curvatur": 92, "custom": [25, 26], "custom_wordfeat": 26, "cut": [2, 3], "cutoff": [23, 102], "cv": [2, 3], "cybernet": 119, "d791ec2c2663": 1, "data": [0, 1, 2, 3, 4, 5, 6, 19, 25, 26, 37, 38, 42, 50, 54, 74, 75, 76, 82, 84, 87, 91, 95, 99, 100, 101, 111, 114, 116, 118, 120, 121, 122], "datafram": [19, 20, 80], "dataset": [43, 50, 85, 118], "david": 119, "db": 93, "de": 42, "decibel": [89, 118], "decim": 1, "decod": [2, 3, 50, 116], "deep": [8, 47, 57, 78], "def": [1, 2, 3], "default": [1, 8, 15, 17, 25, 26, 47, 54, 57, 60, 65, 66, 67, 69, 78, 79, 80, 88, 89, 92, 93, 95, 102, 103, 105, 118, 119], "defin": [2, 3, 88, 95, 118, 119], "definit": 94, "delai": [2, 3, 119], "delays_": [2, 3], "delta_att": 93, "delta_ripp": 93, "denois": 42, "depend": [25, 115], "deprec": [1, 4, 19], "deprecationwarn": 1, "depth": [2, 22, 25, 35, 36, 39], "depth1": [35, 36, 39], "depth2": [35, 36, 39], "deriv": 121, "describ": 19, "descript": [1, 61], "design": [2, 3, 5, 50], "detail": [74, 118, 122], "detect": [74, 118], "determin": [26, 119], "develop": [0, 115, 121], "deviat": 119, "dh": 111, "dict": [1, 2, 3, 8, 16, 25, 38, 47, 49, 57, 60, 62, 68, 78, 81, 118], "dictionnari": [2, 3, 38], "diff": 121, "differ": [1, 2, 3, 42, 61, 71, 86, 117, 118, 119], "digit": [84, 118], "dim": [11, 14, 54, 91], "dimens": [2, 3, 4, 25, 72, 119], "dimension": [70, 102], "dimmens": [87, 118], "dir": [2, 3], "directli": [76, 115, 118], "directori": [2, 3, 115], "displai": [1, 107], "distribut": 115, "do": [34, 92, 115, 121], "doc": 115, "doe": 50, "doing_copi": 19, "don": 0, "donder": 0, "done": 25, "dot": 119, "down": 119, "download": 115, "drop": [1, 2, 3, 6, 15, 54, 67, 70, 95], "drop_miss": 95, "dt": 119, "dual": 119, "dummi": [87, 118], "dur": [29, 30], "dur_path": [25, 120], "durat": [2, 3, 4, 19, 24, 25, 26, 29, 30, 121], "duration_path": [2, 3, 4], "dure": 19, "dynam": 119, "e": [1, 2, 3, 15, 17, 20, 25, 50, 67, 69, 79, 87, 93, 101, 103, 104, 115, 118, 122], "each": [2, 3, 5, 15, 16, 17, 25, 26, 27, 32, 33, 34, 38, 42, 49, 50, 65, 67, 68, 69, 70, 71, 72, 75, 79, 81, 86, 107, 118, 119], "easi": [2, 3, 101], "edg": 111, "edit": 115, "eeg": [0, 5, 6, 12, 19, 24, 42, 50, 54, 74, 82, 87, 114, 116, 117, 118, 119], "eeg_data": [2, 3, 4, 25], "eeg_fnam": [2, 3], "eeg_path": [2, 3], "eeglab": [2, 3, 37, 114, 116], "eeglab2mn": [2, 3, 114, 120], "effect": [15, 17, 61, 67, 69, 79, 118], "effici": [2, 3], "eigh": 1, "either": [1, 34, 65, 118, 119], "elbow": 92, "electroencephalogram": 119, "element": [26, 71, 86, 118, 119], "els": [93, 121], "embed": [4, 25, 26, 34], "emerg": 119, "empti": [54, 64], "enable_metadata_rout": [15, 17, 67, 69, 79, 118], "encapsul": [7, 46, 56, 77], "encod": 19, "encount": 1, "end": [2, 3], "endswith": [2, 3, 4, 25], "ensur": 115, "entri": [33, 95], "entropi": 25, "enumer": [2, 3, 121], "env": [1, 3, 4, 25, 102], "env_path": [3, 4, 25], "envelop": [23, 25, 30, 102, 116], "eog": [74, 118], "ep": 40, "epoch": [1, 2, 3], "epsilon_t": 119, "erp": [87, 118], "error": [1, 2, 3, 15, 17, 67, 69, 79, 95, 118], "esitm": [2, 3], "especi": 116, "estim": [2, 3, 5, 8, 15, 16, 17, 47, 49, 50, 57, 63, 65, 67, 68, 69, 72, 75, 78, 79, 80, 81, 85, 86, 87, 93, 117, 118, 121], "et": [42, 74, 118, 119], "etard": 0, "etard11": 0, "etc": [60, 116, 121, 122], "evalu": 119, "event": [1, 2, 3, 87, 118, 121], "event_id": [1, 2, 3], "event_stimulu": 121, "events_from_annot": 1, "eventu": 32, "everi": 71, "evok": 119, "exampl": [25, 50, 74, 80, 95, 114, 118, 119], "except": [2, 3], "excit": 119, "excitatori": 119, "exctend": 119, "exctract": 25, "exist": [15, 17, 21, 67, 69, 79, 118], "exp": 121, "expect": [33, 35, 36, 39, 70, 74, 91, 118], "experi": [19, 24], "experiment_path": [2, 3], "explicitli": 102, "extend": [25, 87, 118], "extern": 119, "extra": [2, 3], "extract": [1, 2, 3, 23, 25, 26, 30, 32, 115, 116], "extract_duration_audio": 114, "extract_duration_praat": 114, "f": [1, 2, 3, 55, 93, 121], "f_name": [2, 3], "factor": 102, "fals": [1, 2, 3, 5, 6, 15, 17, 18, 19, 21, 22, 25, 48, 50, 54, 60, 66, 67, 69, 70, 71, 74, 75, 76, 79, 89, 91, 92, 95, 101, 102, 105, 118, 119, 121], "fashion": 50, "fasten": 4, "faugera": 119, "fb": [84, 118], "fbank": [84, 106, 118], "feat": [2, 3, 19, 20, 26], "feat_id": [2, 3, 13, 14, 60, 62], "feat_matrix": 4, "feat_nam": [1, 2, 3, 6, 15, 54, 67, 70], "feat_names_": [5, 50], "featur": [0, 5, 6, 13, 14, 19, 20, 21, 22, 23, 25, 26, 32, 36, 42, 50, 54, 60, 62, 63, 114, 116, 121], "feature_matrix": 25, "feature_nam": [2, 3], "fed": 72, "fellow": 4, "few": [1, 4], "field": [2, 3], "fieldtrip2mn": 114, "fig": [2, 3, 60], "figsiz": [2, 3, 121], "figur": [60, 121], "file": [25, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 58, 64, 115, 116, 120], "filenam": [58, 64], "filepath": [29, 30, 32, 33, 35, 36, 39, 40, 41, 120], "fill": [53, 54, 95], "filt_func": [84, 118], "filter": [1, 2, 3, 9, 74, 82, 84, 88, 93, 118, 121], "filterbank": [5, 84, 106, 107, 118], "filtertyp": [88, 118], "filtfilt": [1, 121], "final": 102, "find": [0, 34, 42, 70, 92, 117, 118], "fine": 25, "fir": [1, 93], "fire": 119, "first": [1, 2, 3, 4, 91, 105, 119, 121], "fit": [1, 2, 3, 5, 15, 26, 42, 50, 53, 63, 64, 67, 70, 72, 73, 74, 79, 117, 118, 121], "fit_ar": [73, 114, 117], "fit_intercept": [2, 3, 5, 50], "fit_param": 118, "fit_transform": [80, 118], "fit_var": [114, 117], "flatten": 60, "float": [2, 3, 5, 19, 24, 25, 26, 29, 30, 50, 55, 62, 65, 71, 74, 92, 93, 95, 96, 97, 102, 118, 119], "flop01": [2, 3], "flop02": [2, 3], "flop03": [2, 3], "flop04": [2, 3], "flushington": 4, "fly": [25, 26, 63], "fname": [1, 2, 3, 30, 37, 38], "focus": 114, "fold": 70, "folder": 115, "follow": [22, 25, 115, 118, 119], "font": 111, "fontsiz": 111, "forc": 25, "form": [1, 16, 37, 49, 68, 81, 87, 92, 118], "formal": 0, "format": [2, 3, 25, 32, 35, 36, 39, 64, 80, 116], "former": [0, 119], "forrest": 119, "fortun": [2, 3], "forward": [117, 122], "found": 24, "fr": 70, "frac": 93, "free": [74, 118], "freq": [5, 88, 118], "frequenc": [22, 25, 32, 41, 88, 102, 118, 121], "friston": 119, "from": [2, 3, 4, 9, 23, 24, 25, 26, 30, 32, 36, 37, 38, 40, 50, 55, 58, 62, 65, 74, 86, 87, 93, 101, 103, 114, 116, 118, 119, 120, 121], "ftype": 1, "full": [25, 58, 64], "func": [25, 51, 65, 100], "funciton": 51, "function": [26, 29, 30, 50, 51, 53, 65, 72, 73, 84, 87, 88, 90, 92, 95, 100, 101, 114, 115, 119], "functool": [2, 3], "futur": [1, 65, 95, 121], "futurewarn": 1, "g": [1, 2, 3, 15, 17, 67, 69, 79, 87, 103, 118, 119, 121, 122], "g_exc": 119, "g_inh": 119, "gain": 119, "gather": [25, 123], "gaussian": 121, "gb": 98, "gca": 1, "gener": [2, 3, 19, 25, 30, 74, 111, 114, 118, 119, 122], "gensim": [25, 34], "get": [2, 3, 7, 8, 29, 30, 34, 46, 47, 56, 57, 65, 77, 78, 98], "get_data": [2, 3], "get_eeg_ord": 1, "get_env": 1, "get_gridspec": 121, "get_lin": [2, 3], "get_pow": [114, 118], "get_sentence_posit": 114, "get_spatial_color": 114, "get_valu": [2, 3], "get_word_onset": 114, "get_word_vector": [25, 114], "get_xticklabel": [2, 3], "get_ylim": 1, "getcwd": 1, "getexistingdirectori": [2, 3], "getlogg": [2, 3], "github": 115, "give": [2, 3], "given": [2, 3, 15, 17, 24, 25, 26, 32, 33, 37, 40, 50, 62, 65, 67, 69, 70, 71, 79, 84, 93, 104, 118, 119], "glove": 4, "googl": 25, "gouraud": [2, 3], "grand": [2, 3], "grand_avg_coef": [2, 3], "greater": 1, "greedi": [2, 3], "grei": 103, "gridspec_kw": [2, 3], "grimbert": 119, "gt": [1, 2, 3], "gui": [2, 3], "gui_fnam": [2, 3], "guid": [7, 15, 17, 46, 56, 67, 69, 77, 79, 118], "gyp": 4, "h": 119, "h_trans_bandwidth": [1, 2, 3], "ha": [5, 15, 17, 26, 32, 36, 50, 54, 63, 66, 67, 69, 79, 118], "hand": 22, "handl": [21, 116], "have": [2, 3, 16, 26, 49, 50, 68, 74, 81, 86, 115, 118], "head": [2, 3], "header": [30, 36], "height": [93, 111], "held": [2, 3], "helper": [72, 95, 118], "henc": [2, 3, 21], "here": [21, 33, 74, 93, 118, 123], "hertz": 93, "hesit": 0, "high": [2, 3], "highlight": [2, 3, 109], "hilbert": 102, "home": [2, 3, 4], "hop_siz": 101, "how": [1, 2, 3, 4, 7, 15, 17, 46, 56, 67, 69, 77, 79, 80, 118], "howev": [2, 3, 25, 50, 65, 74, 87, 118], "hspace": [2, 3], "html": 115, "http": [0, 94], "hugo": 0, "hw2512": [2, 3, 4, 25], "hyperalign": 118, "hz": [1, 102, 119, 121], "i": [1, 2, 3, 15, 17, 19, 20, 25, 26, 30, 35, 36, 38, 39, 50, 53, 54, 60, 63, 64, 65, 67, 69, 70, 71, 72, 74, 79, 80, 85, 87, 90, 91, 93, 94, 95, 101, 104, 105, 107, 114, 116, 118, 119, 121], "ica": 37, "id": [2, 3], "ideal": 32, "idealis": [87, 118], "ident": 54, "idx": [43, 44], "ignor": [15, 17, 67, 69, 79, 118], "ii": [2, 3, 93], "im": [2, 3], "imperi": 0, "impervi": 4, "implement": [2, 3, 74, 117, 118, 119], "import": [4, 25, 115, 116, 120, 121], "impuls": [87, 118], "in_plac": 66, "inclus": [2, 3], "inde": [2, 3], "independ": 73, "index": [1, 2, 3, 13, 14, 43, 44, 45, 60, 62, 66, 103, 114], "indic": [2, 3, 19, 24, 25, 105], "individu": [1, 42, 70, 71], "inferno": 103, "info": [1, 2, 3, 4, 60, 62, 104, 109], "inform": [7, 46, 56, 77], "inhib": 119, "inhibitori": 119, "initi": [0, 2, 3, 119], "input": [1, 2, 3, 32, 51, 75, 76, 89, 95, 102, 116, 118, 119, 121, 122], "input_dim": 119, "input_fnam": [2, 3], "insid": [15, 17, 67, 69, 79, 118], "instal": 114, "instanc": [2, 3, 16, 21, 22, 23, 24, 25, 26, 27, 30, 42, 49, 51, 55, 58, 62, 66, 68, 74, 80, 81, 87, 103, 115, 118, 122], "instead": [1, 2, 3, 4, 15, 17, 67, 69, 73, 79, 88, 118], "instruct": 114, "int": [1, 2, 3, 5, 13, 14, 25, 42, 50, 60, 62, 66, 72, 73, 74, 89, 93, 101, 103, 118, 119, 121], "integr": 119, "intercept": [5, 50, 54], "intercept_": [5, 6, 50, 51, 54], "interp_bad": [2, 3], "interpret": 1, "invalid": 1, "invers": [2, 3], "involv": [2, 3], "io": [1, 2, 3, 4, 114, 120, 121], "ioerror": 37, "ipython": [1, 2, 3], "issu": 0, "item": [2, 3, 4, 25, 54], "iter": [2, 3], "its": [25, 43, 63, 65, 89, 118], "itself": 19, "ix_ch": [2, 3], "ix_plot": [2, 3], "j": 119, "jamali": 119, "jansen": 119, "jansenrit": [114, 119], "jansenritextend": [114, 119], "job": [89, 118], "join": [1, 2, 3, 4, 25], "jrnetwork": [114, 119], "jupyt": 114, "k": [2, 3, 70, 73, 111, 117, 121], "karen": [0, 1], "katerina_experi": [2, 3, 4, 25], "kazemi": 119, "keep": [1, 24, 25, 42], "keep_vector": 25, "kei": [2, 3, 38, 41], "kept": [74, 118], "kernel": 121, "keyedvector": 34, "kfold": [2, 3], "kinemat": 119, "kinet": 119, "knee": 92, "knee_index": 103, "knee_point": [6, 15], "known": 118, "kulik": 119, "kwarg": [28, 31, 60, 62, 88, 108, 109, 110, 112, 113, 118], "l": [2, 3], "l2": 71, "l_trans_bandwidth": 1, "label": [105, 121], "labori": 4, "lag": [1, 2, 3, 5, 6, 9, 50, 53, 54, 55, 62, 63, 67, 70, 72, 73, 74, 95, 96, 97, 118, 119, 122], "lag_i": [6, 15], "lag_sampl": 95, "lag_span": 95, "lag_spars": 95, "lambda": [2, 3, 119], "laplacian": [2, 3], "larg": [63, 74, 118], "last_eig": 1, "latter": [2, 3, 16, 49, 68, 81, 119], "leakag": 70, "learn": [82, 118], "least": [2, 3], "leav": 26, "legend": 121, "len": [1, 2, 3, 70, 71, 95], "length": [1, 26, 54, 71, 89, 118], "less": 1, "let": [2, 3], "level": [5, 22, 25, 26, 50, 114, 116, 121], "lfilter": [84, 118], "lib": 1, "librari": [0, 115], "like": [24, 25, 26, 45, 71, 86, 90, 118, 119], "linalg": 1, "line": [1, 2, 3, 25, 32, 36, 60, 105, 109, 121], "line2d": 1, "linealpha": 105, "linear": 71, "linearsegmentedcolormap": 103, "linguist": 25, "link": 115, "linspac": [1, 103], "linux": 115, "list": [0, 5, 19, 21, 25, 26, 32, 33, 34, 42, 45, 50, 54, 60, 66, 70, 71, 74, 84, 86, 95, 97, 105, 114], "list_audio_fil": 2, "list_datafil": [2, 3], "list_env_fil": [3, 4, 25], "list_stori": [2, 3, 4, 25], "list_subject": [2, 3], "list_surprisal_fil": [3, 25], "list_synt_fil": 2, "list_wordfreq_fil": [3, 4, 25], "listdir": [2, 3, 4, 25], "literatur": [118, 119], "ll": [2, 3], "load": [2, 3, 24, 25, 33, 35, 36, 37, 38, 39, 40, 41, 114], "load_close_valu": 114, "load_depth_valu": 114, "load_eeg": 1, "load_env": 1, "load_ica": [2, 3], "load_ica_matric": 114, "load_mat": 114, "load_open_valu": 114, "load_surprisal_valu": 114, "load_wordfreq_valu": 114, "loadmat": [1, 2, 3], "loc": 104, "local": [1, 92], "log": [2, 3, 41, 89, 118], "log10": 103, "log_": 93, "logger": [2, 3], "look": 92, "loop": [2, 3], "low": [1, 74, 102, 118, 121], "low_rank": [74, 118], "lt": [1, 2, 3], "lw": [2, 3], "m": 119, "mac": 115, "machinelearn": [2, 3, 4], "made": 50, "mai": [2, 3, 115], "make": [2, 3, 115], "manipul": 114, "map": [2, 3, 8, 9, 47, 57, 78], "mass": 119, "mat": [1, 2, 3, 38], "match": [2, 3, 24, 32], "mathemat": 119, "matlab": 116, "matplotlib": [1, 121], "matric": [2, 3, 37, 42, 50, 54, 71, 75, 86, 118], "matrix": [2, 3, 5, 25, 37, 42, 50, 54, 63, 74, 85, 87, 94, 95, 118, 119, 122], "matter": 116, "max": [1, 2, 3], "max_coef": [2, 3], "maxasterix": 111, "maximum": [55, 92, 93, 111, 119], "mayb": 101, "mcca": 114, "mean": [2, 3, 26, 65, 74, 91, 101, 118, 119], "mean_coef": [2, 3], "mean_scor": [2, 3], "measur": [25, 119], "mechan": [7, 15, 17, 46, 56, 67, 69, 77, 79, 118], "media": [2, 3, 4, 25], "median": 41, "meeg": 119, "meg": [114, 119], "memori": [2, 3, 25, 101], "men": 4, "meta": [15, 17, 67, 69, 79, 118], "metadata": [7, 15, 17, 46, 56, 67, 69, 77, 79, 118], "metadata_rout": [15, 17, 67, 69, 79, 118], "metadatarequest": [7, 46, 56, 77], "method": [15, 16, 17, 23, 26, 34, 49, 66, 67, 68, 69, 79, 81, 87, 102, 117, 118, 119, 122], "might": [22, 63, 65, 115], "min": 1, "minimum": [55, 92], "miscelan": 122, "mix": [37, 42], "mne": [1, 50, 62, 74, 104, 116, 118], "mod": 117, "mode": [115, 121], "model": [4, 6, 34, 74, 75, 76, 82, 114, 118, 121, 122], "model_select": [2, 3], "modifi": 115, "modul": [89, 114, 117, 122], "monitor": 119, "monosyllab": 4, "montag": [2, 3], "montage_mn": [2, 3], "more": [2, 3, 122], "most": 116, "move": [89, 101, 118, 122], "mse": 65, "multi": [74, 84, 118], "multiband": 119, "multichannel": [74, 118], "multichanwienerfilt": [114, 118], "multidimension": [1, 72], "multipl": 50, "multivari": [73, 95], "multiwai": 118, "must": [25, 26, 32, 51, 54, 65, 70, 71, 74, 86, 102, 118], "mv": 119, "n": [1, 4, 42, 93, 119], "n_channel": [1, 2, 3], "n_chans_": [5, 50], "n_comp": [1, 6, 9, 10, 11, 12, 13, 14, 15], "n_compon": 42, "n_delai": [2, 3], "n_dim": 10, "n_event": 121, "n_feat": [2, 3, 101], "n_feats_": [2, 5, 50], "n_featur": [2, 3, 101, 118], "n_features_new": 118, "n_job": [2, 3, 84, 89, 118], "n_output": [2, 3, 118], "n_sampl": [118, 121], "n_split": [2, 3, 70], "name": [5, 8, 15, 17, 20, 26, 33, 47, 50, 54, 57, 58, 62, 64, 67, 69, 78, 79, 88, 117, 118], "namespac": 121, "nan": 95, "natmeeg": 121, "natur": 119, "naturalist": [0, 114], "nchan": [5, 6, 37, 50, 54, 55, 71, 72, 73, 89, 118], "nchannel": [84, 86, 118], "ncol": [2, 3], "ncolor": 103, "ncomp": 37, "ncompon": 42, "nd": 91, "ndarrai": [5, 6, 20, 25, 26, 34, 37, 50, 54, 55, 63, 65, 71, 72, 73, 74, 75, 84, 89, 95, 101, 102, 118], "ndim": [25, 34, 70, 119], "ndimens": 25, "necessari": 53, "need": [26, 101, 115, 119], "neg": 95, "nest": [16, 49, 68, 81], "network": 119, "neural": 119, "neuralmassnetwork": [114, 119], "neuralmassnod": [114, 119], "neuroimag": 119, "neuron": 119, "neurophysiolog": 114, "neurosci": 119, "new": [20, 22, 51, 102], "nfeat": [5, 6, 26, 50, 54, 55, 71, 95], "nfilter": [84, 118], "nfor": [2, 3], "nl": 0, "nlag": [5, 6, 50, 54, 55, 72, 73], "no_particip": 1, "nob": 119, "node": [22, 25, 119], "node_dynam": 119, "nois": [119, 121], "noisi": [74, 118], "non": [1, 54], "none": [2, 3, 5, 6, 15, 17, 19, 22, 25, 26, 42, 48, 50, 60, 61, 62, 64, 65, 67, 69, 74, 79, 80, 93, 102, 103, 105, 107, 109, 111, 118, 119, 121], "nonlinear": 119, "normal": [2, 3, 48], "normalis": [6, 15, 119], "normfactor": 41, "note": [2, 3, 5, 15, 17, 36, 50, 63, 67, 69, 70, 71, 79, 87, 91, 92, 93, 101, 118, 119], "notebook": [2, 3, 4, 114], "now": [2, 3, 25], "np": [1, 2, 3, 50, 65, 95, 103, 121], "npy": 1, "npz": 64, "nrow": [2, 3], "nsampl": [6, 54, 71, 72, 73, 86, 89, 95, 102, 118], "nsamples_env": 102, "nsamples_new": 95, "nt": 6, "ntime": [26, 119], "ntrial": [86, 118], "num_comp": 44, "num_window": 101, "number": [5, 25, 26, 42, 50, 65, 71, 72, 73, 86, 89, 101, 111, 118, 119, 121], "numpi": [1, 58, 64, 101, 121, 122], "numtap": 93, "nvocab": 25, "nword": [25, 26, 34], "o": [1, 2, 3, 4, 25, 119], "object": [1, 2, 3, 7, 15, 16, 17, 21, 22, 26, 46, 49, 56, 64, 67, 68, 69, 77, 79, 81, 104, 118], "observ": [37, 42], "obtain": [32, 50, 74, 118], "occur": [1, 2, 3, 19, 95], "ocntain": 4, "octav": 0, "odd": 93, "offset": [33, 111], "offset1": 36, "offset2": 36, "ok": [74, 118], "old": 25, "onc": [2, 3, 5, 50, 71, 74, 118], "one": [4, 22, 25, 32, 42, 43, 50, 53, 54, 70, 74, 85, 95, 101, 115, 118, 119, 121], "ones": [5, 50], "onki": 63, "onli": [1, 2, 3, 5, 15, 17, 21, 25, 26, 50, 67, 69, 79, 92, 115, 118], "onset": [2, 3, 4, 19, 24, 25, 26, 32, 33, 120, 121], "onset1": 36, "onset2": 36, "onset_list": 19, "onset_path": [2, 3], "onset_seg": 24, "onto": 119, "open": [0, 2, 22, 25, 35, 36, 39], "open1": [35, 36, 39], "oper": 66, "opt_cca_svd": [6, 15], "option": [15, 17, 67, 69, 79, 80, 93, 118], "order": [72, 73, 93, 119], "order_path": 1, "origin": [1, 2, 3, 15, 17, 67, 69, 79, 101, 102, 118], "original_strid": 101, "ot": 50, "other": [0, 2, 3, 15, 17, 22, 26, 36, 67, 69, 79, 87, 95, 107, 118], "otherwis": [15, 17, 67, 69, 79, 91, 118], "ought": 25, "our": [2, 3, 91, 122], "out": [2, 3, 89, 95, 103, 107, 115, 118], "out_of_bound": 1, "output": [2, 3, 26, 63, 65, 80, 107, 116, 119, 121], "output_dim": 119, "over": [2, 3, 51, 111, 119], "overlap": [100, 101], "overlap_s": 91, "p": [1, 87, 111, 118, 119], "p01_bi": [2, 3], "p02_11072016": [2, 3], "p03_12072016": [2, 3], "p04": [2, 3], "p04_13072016": [2, 3], "p05_14072016": [2, 3], "p06_18072016": [2, 3], "p07_19072016": [2, 3], "p08_21072016": [2, 3], "p09_22072016": [2, 3], "p10_14092016": [2, 3], "p12_01092016": [2, 3], "p13_08092016": [2, 3], "p14_21032017": [2, 3], "packag": [1, 114, 121], "pad": [91, 99, 100, 101], "page": 114, "pair": [38, 88, 118], "pairwis": 105, "pairwise_boxplot": 114, "panda": [20, 80], "paper": [74, 118, 119], "parallel": 119, "param": [8, 13, 14, 16, 47, 49, 57, 68, 78, 81], "paramet": [2, 3, 8, 15, 16, 17, 19, 20, 24, 25, 26, 29, 30, 32, 33, 34, 37, 38, 42, 45, 47, 49, 51, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 84, 86, 88, 89, 92, 93, 95, 96, 97, 101, 102, 103, 105, 111, 118, 119, 121], "parmat": 66, "parrallel": [89, 118], "pars": 25, "part": [0, 20, 25, 26, 33, 116], "partial": 71, "particip": [1, 2, 3], "pass": [1, 15, 17, 60, 62, 67, 69, 79, 102, 118, 121], "past": 95, "path": [1, 2, 3, 4, 19, 25, 29, 30, 32, 33, 37, 38, 58, 64, 120], "path_audio": [2, 3, 19, 25, 120], "path_praat_env": [3, 4, 25, 120], "path_surpris": [3, 22, 25, 120], "path_syntact": [2, 22, 25], "path_transcript": 25, "path_wordfrequ": [22, 25], "path_wordonset": [2, 3, 4, 22, 25, 120], "path_wordvector": [4, 22, 25], "pattern": 119, "pauciti": 4, "pca": 118, "pcolormesh": [2, 3], "pd": 19, "peak": [93, 121], "peak_tim": 121, "per": [32, 42, 71], "percent": [74, 118], "perform": [2, 3], "person": 0, "phase": 119, "pick": 60, "pick_typ": [1, 2, 3], "piec": [2, 3], "pip": 115, "pipelin": [15, 16, 17, 49, 65, 67, 68, 69, 79, 81, 118], "pitch": 30, "place": [54, 66], "playground": [2, 3], "pleas": [0, 1, 7, 15, 17, 46, 56, 67, 69, 77, 79, 91, 118], "plot": [2, 3, 9, 12, 13, 14, 61, 62, 70, 92, 105, 106, 107, 109, 121, 123], "plot_activation_map": 1, "plot_corr": 1, "plot_filterbank": 114, "plot_filterbank_output": 114, "plot_interact": 114, "plot_kw": [60, 62], "plot_spatial_filt": 1, "plot_time_filt": 1, "plot_topomap": [2, 3], "plot_trf_signi": 114, "plots_topogrid": 114, "plt": [1, 2, 3, 60, 62, 111, 121], "plug": [2, 3], "pmc": 119, "po": [2, 3, 9, 12, 13], "point": [92, 97], "polar": 80, "popul": 119, "portion": [74, 109, 118], "posit": [32, 94, 95], "possibl": [16, 49, 68, 81], "possibli": [42, 71], "potenti": 119, "power": [89, 102, 118], "praat": [25, 30], "predict": [2, 3], "prefer": 111, "preload": [1, 2, 3], "prepar": [2, 3], "preprocess": [1, 2, 3, 26, 106, 114], "present": [0, 37, 114], "previous": 54, "print": [1, 2, 3, 4, 27, 121], "prior": [74, 118], "procedur": 70, "process": [2, 3, 25, 34, 114, 119, 122], "project": [0, 42, 43, 54], "prone": 70, "provid": [15, 17, 67, 69, 79, 114, 118], "pseudo": [2, 3], "pull": 0, "punctuat": 32, "pval": 111, "py": [1, 2, 3, 80], "pyeeg": [0, 1, 2, 3, 4, 114, 117, 118, 119, 120, 121], "pypi": 114, "pyplot": [1, 121], "pyproject": 115, "pyqt5": [2, 3], "pyramid": 119, "python": [114, 122], "q": 1, "qfiledialog": [2, 3], "qt": [2, 3], "qtwidget": [2, 3], "r": 66, "r2": [2, 3], "r_": 121, "rais": [15, 17, 26, 37, 64, 67, 69, 71, 79, 95, 102, 118], "ram": 98, "randint": 121, "randn": [50, 121], "random": [34, 50, 121], "rang": [1, 2, 3], "rank": [74, 118], "rate": [5, 19, 24, 26, 50, 55, 93, 96, 97, 102, 119], "rather": 71, "raw": [1, 2, 3, 104, 116], "raw_eeg": 1, "raw_stori": 1, "rdm": [4, 25, 34], "re": [2, 3, 70], "reach": [2, 3], "read": 1, "read_annotations_eeglab": 1, "read_ev": 1, "read_events_eeglab": [2, 3], "read_raw_eeglab": [1, 2, 3], "realli": 111, "receiv": 119, "recept": [2, 3], "receptivefieldestim": 50, "recipe": 122, "reconstruct": 63, "record": [19, 87, 116, 118], "rectifi": [23, 102], "recurr": 119, "reduc": [2, 3], "reduce_multi": [65, 69], "ref": 94, "refer": [42, 74, 118], "reg_param": [2, 3], "reg_typ": [2, 3], "regress": 71, "regressor": 73, "regular": 71, "regularis": [50, 61, 66, 70, 71, 121], "reject": 109, "rel": [19, 34, 93, 119], "relat": 122, "relationship": 117, "releas": 115, "relev": [15, 17, 67, 69, 79, 118], "remov": [1, 19, 74, 82, 118, 121], "repositori": 115, "repres": [1, 2, 3, 25, 95, 119], "request": [0, 13, 14, 15, 17, 50, 60, 62, 67, 69, 79, 97, 118], "requir": [26, 65], "resampl": 102, "reshap": 1, "respect": [19, 33, 65], "respons": [42, 50, 87, 117, 118], "result": [1, 2, 3, 71, 74, 92, 101, 118, 121], "retain": [15, 17, 67, 69, 79, 118], "return": [1, 2, 3, 6, 7, 8, 15, 16, 17, 24, 26, 29, 30, 32, 33, 34, 37, 38, 41, 46, 47, 49, 51, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 84, 86, 89, 92, 93, 95, 96, 97, 101, 102, 103, 105, 111, 118, 119], "reus": [2, 3], "review": 0, "revis": 119, "rf": [2, 3], "ridg": [2, 3, 50], "rigid": 25, "rippl": 93, "rit": 119, "rmax": 119, "rmse": 65, "rnn": 119, "rnnlm": 25, "rnnlm_model": 25, "robust": [2, 3], "role": 119, "roll": [91, 100, 101, 122], "rotat": [2, 3, 54, 67], "roughli": [2, 3], "rout": [7, 15, 17, 46, 56, 67, 69, 77, 79, 118], "row": [95, 119, 121], "ru": 0, "rule": 93, "run": 115, "runtimewarn": [1, 2, 3], "same": [1, 2, 3, 26, 42, 50, 51, 71, 86, 101, 118, 121], "sampl": [1, 2, 3, 4, 5, 19, 24, 26, 42, 50, 54, 55, 70, 71, 84, 85, 86, 87, 89, 93, 96, 97, 101, 102, 118, 119, 121], "save": 58, "scale": [1, 26, 41, 119], "sciencedirect": 119, "scipi": [1, 2, 3, 121], "scor": 65, "score": [2, 3, 61, 69], "score_": 1, "scraggi": 4, "script": 25, "seagateexpansiondr": [2, 3, 4, 25], "search": 114, "sec": [1, 55], "second": [5, 24, 25, 36, 50, 54, 87, 96, 97, 105, 118, 121], "see": [0, 2, 3, 15, 17, 21, 25, 67, 69, 79, 80, 86, 117, 118, 119, 122], "seealso": 22, "seed": 119, "seen": 119, "segment": [4, 19, 24, 25, 65, 74, 75, 92, 101, 118], "select": [1, 2, 3, 66, 74, 118], "self": [15, 16, 17, 25, 26, 49, 67, 68, 69, 79, 80, 81, 118], "sentenc": 32, "separ": 32, "separayt": 33, "seq": 1, "sequenc": 1, "seri": [2, 3, 26, 72, 73, 87, 95, 105, 118, 119, 122], "serv": 116, "set": [1, 2, 3, 5, 16, 37, 42, 49, 50, 66, 68, 80, 81, 87, 91, 95, 102, 104, 116, 118, 120, 121], "set_color": [2, 3], "set_config": [15, 17, 67, 69, 79, 118], "set_fit_request": 118, "set_path": 1, "set_titl": 121, "setlevel": [2, 3], "setp": [2, 3], "sever": [66, 70, 102, 115], "sfreq": [1, 2, 3], "shade": [2, 3, 109], "shape": [2, 3, 54, 85, 87, 118, 119, 121], "share": [42, 101], "sharei": 121, "shift": [95, 101, 122], "shift_arrai": 91, "shiftarr": 101, "shit": 95, "short": [27, 90], "should": [5, 15, 17, 22, 32, 34, 50, 54, 67, 69, 71, 79, 95, 118], "show": [2, 3, 4, 121], "shown": 71, "shuffl": 70, "shut": 119, "side": 122, "sigma": 119, "sigma_p": 119, "sigmoid": 119, "signal": [1, 20, 26, 42, 50, 84, 89, 102, 107, 114, 118, 119, 121], "signaltool": 1, "signatur": 65, "signific": 109, "significance_overlai": 114, "similar": [2, 3, 50, 65], "simpl": [16, 38, 49, 68, 70, 81, 114], "simpli": [0, 19, 21, 26, 33, 115, 119, 123], "simul": [114, 121], "simulate_ar": [114, 119], "simulate_var": [114, 119], "simulate_var_from_cov": [114, 119], "sinc": [2, 3, 70], "singl": [43, 50, 65, 70, 73, 85, 87, 114, 118], "singular": [87, 118], "sio": 1, "site": 1, "size": [51, 101, 111, 121], "size_onel": 101, "skip": [25, 34, 102], "sklearn": [2, 3, 15, 17, 26, 65, 67, 69, 79, 86, 118], "sklearn_trf_": 1, "sl": 1, "slope": 119, "sluic": 4, "small": [105, 111], "smaller": [2, 3], "smooth": [89, 92, 118, 121], "smooth_stimulu": 121, "so": [0, 16, 49, 60, 68, 71, 81, 92, 101, 115, 119, 121, 122], "softwar": 30, "some": [0, 15, 17, 20, 63, 67, 69, 70, 79, 114, 118, 122], "somer": [74, 118], "sort": [2, 3], "sound": [1, 23, 30, 33], "sourc": [0, 25, 37, 42, 114], "space": [32, 42, 95, 107], "span": [1, 50, 70, 95, 96], "spars": 95, "spatial": 9, "spatial_color": [60, 109], "special": [87, 118], "specif": [2, 3, 119], "specifi": [84, 118], "spectral_r": [2, 3], "speech": [1, 2, 3, 4, 19, 20, 24, 25, 26, 120], "speech_dur": [1, 26], "sphere": 37, "sphx_glr_auto_examples_miscellaneous_plot_set_output": 80, "spike": 26, "split": [2, 3], "squar": [2, 3, 89, 118], "srate": [1, 2, 3, 4, 5, 19, 24, 25, 26, 50, 88, 93, 96, 97, 102, 118, 120, 121], "stackoverflow": 94, "standard": 119, "standard_1020": [2, 3], "standardscal": 26, "start": 25, "stat": [2, 3], "state": 119, "step": [101, 114, 118, 119], "still": [54, 121], "stim_channel": 1, "stim_path": [2, 3], "stimuli": [0, 114, 116, 121], "stimulu": [50, 117, 121], "stop": 103, "stopband": 93, "store": [1, 2, 3, 19, 25, 70], "stori": [1, 4, 20, 24, 25, 33], "story_id": [2, 3, 4], "story_name_loc": 1, "story_name_path": 1, "story_no": 1, "story_onset": [1, 2, 3], "story_ord": 1, "story_order_125hz": 1, "story_order_1khz": 1, "story_order_path": 1, "story_part": [2, 3, 4, 25], "str": [15, 17, 19, 20, 25, 29, 30, 32, 33, 34, 37, 38, 58, 62, 64, 65, 67, 69, 79, 86, 102, 105, 118], "string": [33, 111], "strip": [2, 3, 4, 25], "structur": [1, 2, 3, 25, 35, 36, 37, 39], "style": 60, "sub": [15, 17, 67, 69, 79, 102, 118], "subax": 60, "subenvelop": 102, "subj": [2, 3, 45], "subj_id": [2, 3], "subject": [42, 70, 71], "subjetc": 70, "subobject": [8, 47, 57, 78], "subplot": [2, 3, 60, 121], "subpopul": 119, "subset": [1, 2, 3], "suffix": [5, 50], "suggest": 0, "sum": [1, 65, 102, 119], "sum_": 119, "summari": 114, "superstiti": 4, "suppli": [34, 74, 105, 118], "support": 42, "suptitl": 121, "surp_path": [3, 25, 120], "surpris": [2, 3, 22, 25, 26, 40], "surprisal_path": [3, 25], "svd": [2, 3, 71], "switch": 115, "symbol": 115, "synaps": 119, "synapt": 119, "synchron": 119, "synt_path": 2, "syntact": [22, 25, 35, 36, 39, 114, 120], "syntactic_depth": 2, "syntfeat_path": 2, "system": [119, 122], "t": [0, 1, 2, 3, 54, 66, 95, 119, 121], "t_kernel": 121, "tabl": 119, "take": [51, 63, 65, 89, 116, 118], "tarbal": 115, "target": [2, 3, 50, 63, 65, 115, 118], "tau": 119, "tau_": 119, "tau_i": 119, "tbw": 93, "tempor": [50, 117], "test": [2, 3], "text": [25, 32, 122], "textgrid": 25, "textual": 25, "than": 50, "thei": [1, 2, 3, 42, 95], "them": [2, 3, 26, 34, 71, 85, 115, 118], "themselv": 33, "theta": 119, "thi": [0, 1, 2, 3, 4, 7, 8, 15, 16, 17, 21, 22, 23, 24, 25, 46, 47, 49, 50, 53, 56, 57, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 81, 87, 95, 101, 117, 118, 119, 121, 122], "thicker": 109, "those": [2, 3, 50, 87, 118], "though": 25, "thresh": [74, 118], "thresh_i": [1, 6, 15], "thresh_x": [1, 6, 15], "threshold": [74, 103, 118, 119], "through": [2, 3], "throw": 101, "thu": [2, 3, 26, 71, 115], "thumb": 93, "tight_layout": [2, 3, 121], "time": [1, 2, 3, 4, 5, 6, 24, 25, 26, 33, 45, 50, 54, 62, 63, 72, 73, 87, 95, 96, 97, 118, 119, 121, 122], "time_axi": [72, 73], "time_highlight": 109, "time_lag": 62, "time_plot": [2, 3], "timedelayingridg": [2, 3], "timid": 4, "titl": [2, 3], "tmax": [1, 2, 3, 5, 50, 55, 96, 119, 121], "tmin": [1, 2, 3, 5, 50, 55, 96, 121], "to_keep": 24, "todo": [19, 74, 99, 118], "toff": [35, 36, 39], "toff1": [35, 36, 39], "togeth": [85, 118], "tol": 92, "toml": 115, "ton": [35, 36, 39], "ton1": [35, 36, 39], "tool": [74, 114, 118], "toolkit": 25, "top": [107, 121], "topo": 13, "topograph": [2, 3], "topomap": [2, 3, 62, 114], "topoplot_arrai": 114, "total": [2, 3], "train": [2, 3, 66, 74, 76, 118], "transcript": 25, "transform": [2, 3, 17, 26, 51, 76, 80, 89, 118], "transform_i": [17, 18], "transform_x": [17, 18], "transit": [93, 102], "transorm": 118, "transpar": 103, "treat": 71, "trf": [5, 14, 50, 51, 53, 54, 55, 58, 60, 62, 64, 66, 70, 109, 114, 120], "trfestim": [2, 3, 114, 121], "trial": [71, 85, 86, 87, 114, 118], "trick": [2, 3, 101, 122], "triplet": 92, "true": [1, 2, 3, 4, 5, 6, 8, 15, 17, 18, 25, 26, 47, 50, 54, 57, 65, 67, 69, 70, 78, 79, 89, 91, 95, 100, 109, 118], "try": [2, 3, 34], "tupl": [1, 84, 118], "tutori": 114, "two": [1, 2, 3, 50, 105, 118, 119], "txt": [3, 4, 25], "type": [5, 7, 8, 13, 14, 15, 16, 17, 19, 24, 25, 26, 29, 30, 34, 38, 42, 46, 47, 49, 50, 51, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 92, 93, 95, 96, 97, 101, 102, 103, 105, 111, 118, 119], "typic": [42, 87, 118, 119], "u": [2, 3], "uk": 0, "unaccount": 4, "unchang": [15, 17, 67, 69, 79, 80, 118], "undergo": 121, "unigram": 25, "uninterest": 4, "unit": 98, "unk": [25, 34], "unk_wv": 25, "unkval": 41, "unmix": 37, "unsupervis": 118, "up": [1, 119], "updat": [15, 16, 17, 49, 67, 68, 69, 79, 81, 117, 118], "update_connect": [114, 119], "us": [1, 2, 3, 4, 15, 17, 18, 22, 24, 26, 34, 42, 50, 53, 54, 60, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 79, 80, 87, 89, 91, 93, 95, 101, 102, 111, 118, 119], "usabl": 115, "usag": [2, 3, 114], "use_regularis": 50, "use_wordonset": [2, 3, 21, 22], "user": [1, 7, 15, 17, 46, 56, 67, 69, 70, 71, 77, 79, 95, 118], "util": [15, 17, 67, 69, 79, 114, 118], "v": [1, 54, 119], "valid": [54, 65, 70], "valu": [1, 8, 19, 22, 25, 26, 34, 35, 36, 38, 39, 40, 41, 47, 51, 57, 65, 74, 78, 88, 89, 92, 95, 103, 111, 118, 119], "valueerror": [71, 95], "var": [73, 117, 119], "variabl": [27, 38], "varianc": [26, 74, 118, 119, 122], "variou": 25, "vector": [4, 22, 25, 34, 90, 114, 119, 121], "vectordim": 25, "vectors_correct_head": 4, "veloc": 119, "verbos": [50, 70, 71, 102, 119], "veri": [2, 3, 111], "version": [2, 3, 15, 17, 63, 67, 69, 79, 80, 91, 116, 118, 119, 122], "via": 118, "view": 122, "visual": [74, 114, 118, 119], "visualis": 61, "viz": [2, 3, 62], "vizu": 114, "vizualisaton": 114, "vline": 1, "vmax": [2, 3], "vmin": [2, 3], "vocabulari": [25, 34], "w": [0, 2, 3, 66, 119], "w_": [74, 118], "wa": [0, 25, 80, 101], "wai": [2, 3, 50, 101], "want": [0, 42, 115], "warn": [1, 71], "wav": [2, 3], "waveform": 12, "wavelettransform": 114, "wavfil": 1, "we": [2, 3, 26, 33, 34, 50, 91, 92, 117, 118, 119], "weight": [37, 55], "weissbart": 0, "well": [16, 49, 68, 81, 92], "wendt": 0, "wendt15": 0, "wf": [2, 3, 4, 25], "wf_path": 25, "wfeat": [25, 120], "what": 95, "whatev": 0, "when": [2, 3, 66, 115, 119], "where": [1, 42, 50, 71, 84, 87, 95, 118, 119], "whether": [5, 26, 50, 54, 66, 74, 75, 92, 95, 118], "which": [1, 2, 3, 5, 19, 25, 26, 34, 50, 62, 89, 91, 95, 101, 103, 115, 118], "while": [119, 121], "white": [2, 3], "whiten": 118, "whole": [65, 85, 118], "width": 121, "wiener": [74, 118], "wiht": 122, "wilson": 119, "win": [89, 101, 118], "win_as_sampl": 91, "win_siz": 101, "window": [74, 89, 91, 95, 96, 100, 101, 115, 118], "window_s": 91, "winsiz": [99, 100], "wish": [0, 53], "within": 42, "wlf": 120, "wo_path": [2, 3, 4, 25], "word": [5, 22, 25, 26, 32, 33, 34, 35, 36, 39, 41, 50, 114, 116], "word1": [35, 36, 39], "word2": [35, 36, 39], "word2vec": 4, "word_feat": 21, "word_frequ": [3, 4, 25], "wordfreq": 25, "wordfreq_path": [3, 4, 25], "wordfrequ": 25, "wordlevelfeatur": [2, 3, 4, 21, 114, 120], "wordlist": [25, 34], "wordonset": [22, 25, 26], "wordonset_featur": [4, 26], "wordvec": 34, "wordvector": [25, 34, 114, 120], "wordvectors_matrix": 25, "wordvectors_vocab": 25, "work": [7, 15, 16, 17, 21, 25, 46, 49, 56, 67, 68, 69, 77, 79, 81, 91, 92, 115, 118], "would": [42, 120], "wrapper": [83, 117], "write": 111, "wrong": 26, "wspace": [2, 3], "wv_path": 4, "x": [1, 2, 3, 6, 18, 25, 26, 37, 43, 44, 45, 50, 54, 59, 61, 63, 70, 71, 72, 73, 76, 82, 85, 86, 87, 92, 95, 107, 118, 119], "x0": 119, "x_": 119, "x_new": 118, "x_t": 119, "xlabel": [2, 3], "xlag": 5, "xtest": [65, 69], "xticklabel": 105, "y": [1, 2, 3, 6, 18, 50, 54, 59, 61, 70, 71, 84, 92, 118, 121], "y_already_drop": [6, 15], "y_artifact": [75, 76, 79, 118], "y_clean": [75, 76, 79, 118], "y_event": 121, "y_smooth": 121, "yerr": 111, "yet": [63, 74, 118], "yhat": 65, "ylabel": [2, 3], "ylag": [6, 15], "ymax": 1, "ymin": 1, "you": [0, 1, 2, 3, 15, 17, 60, 67, 69, 79, 115, 118, 121], "your": [0, 115], "ytrue": [65, 69], "zca": 118, "zero": [1, 2, 3, 74, 118, 121], "zscore": [2, 3], "zscore_fun": 26}, "titles": ["About natMEEG", "CCA Tutorial", "TRF on Syntactic Features", "TRF Tutorial", "Loading WordVectors as word level features", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.fit", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.get_metadata_routing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.get_params", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.plot_activation_map", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.plot_all_dim_time", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.plot_compact_time", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.plot_corr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.plot_spatial_filter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.plot_time_filter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.set_fit_request", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.set_params", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.set_transform_request", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.cca</span></code>.CCA_Estimator.transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.AlignedSpeech", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.AlignedSpeech.add_feature", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.AlignedSpeech.add_word_level_features", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.AlignedSpeech.create_word_level_features", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.AlignedSpeech.get_envelope", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.AlignedSpeech.samples_from_onset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.WordLevelFeatures", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.WordLevelFeatures.align_word_features", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.WordLevelFeatures.summary", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.eeglab2mne", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.extract_duration_audio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.extract_duration_praat", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.fieldtrip2mne", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.get_sentence_position", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.get_word_onsets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.get_word_vectors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.load_close_values", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.load_depth_values", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.load_ica_matrices", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.load_mat", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.load_open_values", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.load_surprisal_values", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.io</span></code>.load_wordfreq_values", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.mcca</span></code>.mCCA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.mcca</span></code>.mCCA.canonical_correlate_single", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.mcca</span></code>.mCCA.denoise", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.mcca</span></code>.mCCA.fit", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.mcca</span></code>.mCCA.get_metadata_routing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.mcca</span></code>.mCCA.get_params", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.mcca</span></code>.mCCA.plot_summary_components_variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.mcca</span></code>.mCCA.set_params", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.apply_func", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.copy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.fill_lags", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.fit", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.fromArray", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.get_metadata_routing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.get_params", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.load", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.multialpha_score", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.plot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.plot_multialpha_scores", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.plot_topomap", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.predict", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.save", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.score", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.select_best_coefs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.set_fit_request", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.set_params", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.set_score_request", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.TRFEstimator.xfit", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>._svd_regress", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.fit_ar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.models</span></code>.fit_var", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter.fit", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter.fit_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter.get_metadata_routing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter.get_params", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter.set_fit_request", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter.set_output", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter.set_params", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.MultichanWienerFilter.transorm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.WaveletTransform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.apply_filterbank", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.covariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.covariances", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.covariances_extended", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.create_filterbank", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.preprocess</span></code>.get_power", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>._is_1d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.chunk_data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.find_knee_point", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.fir_order", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.is_pos_def", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.lag_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.lag_span", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.lag_sparse", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.mem_check", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.moving_average", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.rolling_func", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.shift_array", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.utils</span></code>.signal_envelope", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.colormap_masked", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.get_spatial_colors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.pairwise_boxplots", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.plot_filterbank", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.plot_filterbank_output", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.plot_interactive", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.plot_trf_signi", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.plots_topogrid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.significance_overlay", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.topomap", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyeeg.vizu</span></code>.topoplot_array", "Welcome to natMEEG\u2019s documentation!", "Installation Instructions", "IO module", "Modelling", "Preprocessing module", "Simulation module", "Tutorials", "Usage", "Utilities", "Vizualisaton"], "titleterms": {"": 114, "A": 121, "To": 114, "_is_1d": 90, "_svd_regress": 71, "about": 0, "accord": 1, "add_featur": 20, "add_word_level_featur": 21, "align_word_featur": 26, "alignedspeech": [19, 20, 21, 22, 23, 24], "all": 118, "apply_filterbank": 84, "apply_func": 51, "arrai": 122, "author": 0, "averag": [2, 3], "big": [2, 3], "canonical_correlate_singl": 43, "cca": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "cca_estim": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "chunk_data": 91, "class": [116, 117, 118, 119, 122], "coeffici": 1, "colormap_mask": 103, "compar": [2, 3], "comput": [2, 3], "content": 114, "contribut": 0, "copi": 52, "covari": [85, 86], "covariances_extend": 87, "create_filterbank": 88, "create_word_level_featur": 22, "denois": 44, "document": [114, 115], "eeg": [1, 2, 3, 120], "eeglab": 120, "eeglab2mn": 28, "envelop": 1, "exampl": [120, 121], "extract_duration_audio": 29, "extract_duration_praat": 30, "featur": [2, 3, 4, 120], "fieldtrip2mn": 31, "fill_lag": 53, "find_knee_point": 92, "fir_ord": 93, "fit": [6, 45, 54, 75], "fit_ar": 72, "fit_transform": 76, "fit_var": 73, "from": [1, 115], "fromarrai": 55, "function": [116, 117, 118, 122, 123], "gener": 115, "get": 114, "get_envelop": 23, "get_metadata_rout": [7, 46, 56, 77], "get_param": [8, 47, 57, 78], "get_pow": 89, "get_sentence_posit": 32, "get_spatial_color": 104, "get_word_onset": 33, "get_word_vector": 34, "github": 0, "import": [1, 2, 3], "indic": 114, "instal": 115, "instruct": 115, "io": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 116], "is_pos_def": 94, "jupyt": 120, "lag_matrix": 95, "lag_span": 96, "lag_spars": 97, "level": [2, 3, 4, 120], "list": 118, "load": [1, 4, 58, 120], "load_close_valu": 35, "load_depth_valu": 36, "load_ica_matric": 37, "load_mat": 38, "load_open_valu": 39, "load_surprisal_valu": 40, "load_wordfreq_valu": 41, "mai": 120, "manipul": 122, "mcca": [42, 43, 44, 45, 46, 47, 48, 49], "mem_check": 98, "method": [5, 19, 25, 42, 50, 74, 83], "mne": [2, 3], "model": [1, 2, 3, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 117, 119], "modul": [116, 118, 119], "moving_averag": 99, "multialpha_scor": 59, "multichanwienerfilt": [74, 75, 76, 77, 78, 79, 80, 81, 82], "natmeeg": [0, 114, 115], "nois": 1, "notebook": 120, "one": [2, 3], "order": 1, "other": [114, 122], "outdat": 120, "pairwise_boxplot": 105, "plot": [1, 60], "plot_activation_map": 9, "plot_all_dim_tim": 10, "plot_compact_tim": 11, "plot_corr": 12, "plot_filterbank": 106, "plot_filterbank_output": 107, "plot_interact": 108, "plot_multialpha_scor": 61, "plot_spatial_filt": 13, "plot_summary_components_vari": 48, "plot_time_filt": 14, "plot_topomap": 62, "plot_trf_signi": 109, "plots_topogrid": 110, "predict": 63, "preprocess": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 118], "process": 120, "pyeeg": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "pypi": 115, "receptivefield": [2, 3], "rolling_func": 100, "run": [1, 2, 3], "samples_from_onset": 24, "save": 64, "score": 65, "select_best_coef": 66, "set_fit_request": [15, 67, 79], "set_output": 80, "set_param": [16, 49, 68, 81], "set_score_request": 69, "set_transform_request": 17, "sever": [2, 3], "shift_arrai": 101, "signal": 122, "signal_envelop": 102, "significance_overlai": 111, "simpl": 121, "simul": 119, "singl": [2, 3], "sklearn": 1, "some": 119, "sourc": 115, "start": 114, "stori": [2, 3], "subject": [2, 3], "summari": [27, 118], "syntact": 2, "tabl": 114, "todo": [25, 119], "toolbox": 1, "topomap": 112, "topoplot_arrai": 113, "transform": 18, "transorm": 82, "trf": [2, 3, 121], "trfestim": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "tutori": [1, 3, 120], "usag": 121, "util": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 119, 122], "vector": 120, "vizu": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "vizualisaton": 123, "warn": 120, "wavelettransform": 83, "welcom": 114, "word": [2, 3, 4, 120], "wordlevelfeatur": [25, 26, 27], "wordvector": 4, "xfit": 70}})